#+TITLE:  DATA, Exploratory Data Analysis, and R
#+AUTHOR: Marcus Birkenkrahe
#+Subtitle: Introdution to Data Visualization
#+STARTUP: hideblocks overview indent inlineimages
#+ATTR_HTML: :width 600px
[[../img/2_analysis.svg]]
* README
- Why do we analyze data?
- Data as a concept and as a practice
- The importance of metadata
- Exploratory Data Analysis
- Numbers vs. graphs
- Data analysis workflow
- Why R?
- R package management
- Download R practice file
* Why do we analyze data?
#+ATTR_HTML: :width 300px
#+caption: Caspar David Friedrich, Wanderer above a sea of fog (1818)
[[../img/2_wanderer.jpg]]

- Well, *what do you think*?

  Reframe the question:
  #+begin_notes
  Tip: reframe WHY questions as WHAT questions -

  - What data?
  - What analysis?
  - What benefits?
  #+end_notes

  Pearson:
  #+begin_quote
  1. to *understand* what has happened or what is happening;
  2. to *predict* what is likely to happen, either in the future or in
     other circumstances we haven't seen;
  3. to *guide* us in making decisions.
  #+end_quote

* Data - concept
#+ATTR_HTML: :width 500px
#+caption: collapsed data science pipeline
[[../img/2_pipeline.png]]

- An *entity*, e.g.
  + family history of patient in medical study
  + competing company characteristics in marketing analysis

- An *event*, e.g.
  + demographic characteristics of voters
  + locations visited during a shopping visit

- A *process*, e.g.
  + manufacturing data from a production line
  + application information from a hiring process

* DATA - PRACTICE

- Data structures = rectangular array of observed values
- Rows = observation of entity, event, or process
- Columns = recorded characteristic or attribute

  #+begin_src R :results output :exports both
    ## extract first six records from the mtcars data frame
    head(mtcars)
  #+end_src

  #+RESULTS:
  :                    mpg cyl disp  hp drat    wt  qsec vs am gear carb
  : Mazda RX4         21.0   6  160 110 3.90 2.620 16.46  0  1    4    4
  : Mazda RX4 Wag     21.0   6  160 110 3.90 2.875 17.02  0  1    4    4
  : Datsun 710        22.8   4  108  93 3.85 2.320 18.61  1  1    4    1
  : Hornet 4 Drive    21.4   6  258 110 3.08 3.215 19.44  1  0    3    1
  : Hornet Sportabout 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2
  : Valiant           18.1   6  225 105 2.76 3.460 20.22  1  0    3    1

#+begin_notes
- Data frame rows and columns have /names/
- Complete description with [[http://127.0.0.1:23426/library/datasets/html/mtcars.html][help(mtcars)]]
- Meta data supplement data frame content
#+end_notes

* META DATA

#+attr_html: :width 300px
#+caption: Greek goddess of peace and spring "Eirene"
[[../img/2_eirene.png]]

  - "Data about data" (Greek 'meta'= 'after', 'beyond')
  - Meta data for ~mtcars~:
    + Original source of the data
    + Scientific paper analyzing the data
    + Description of the variables (columns)

    *What could be issues with metadata?*

    #+begin_notes
    - *Completeness* - origin
    - *Consistency* - logic, values, (time) dependency
    - *Accuracy* - origin and validity
    #+end_notes

    #+begin_quote
    "As potentially valuable as metadata is, we cannot afford to accept it
    uncritically: we should always cross-check the metadata with the
    actual data values, with our intuition and prior understanding of the
    subject matter, and with other sources of information that may be
    available." (Pearson, 2018)
    #+end_quote

* PRACTICE: META OR NOT META?

#+attr_html: :width 300px
#+caption: datascience.codata.org/articles/10.5334/dsj-2022-010/
[[../img/2_meta.png]]

*Pair exercise:* Identify the different types of data and metadata in
the screenshot of an online journal article.

#+begin_notes
1) Article meta data: Journal title, "Research paper", title, authors
2) Layout meta data: HTML/CSS elements
3) Browser meta data: browser data (buttons for: download, font size,
   print, login, register, menu options; browser console; URL)
4) Article content data: abstract + paper text, tables and figures

   #+attr_html: :width 300px
   #+caption: Solution
   [[../img/2_meta_solution.png]]
#+end_notes

* PROBLEM: MISSING VALUES
#+attr_html: :width 500px
#+caption: Pima Indians data sets in the MASS package
[[../img/2_pima.png]]

Check out structure of Pima datasets:
#+begin_src R :session *R* :results output
  str(Pima.te)
  str(Pima.tr)
  str(Pima.tr2)
#+end_src

#+RESULTS:
#+begin_example
'data.frame':	332 obs. of  8 variables:
 $ npreg: int  6 1 1 3 2 5 0 1 3 9 ...
 $ glu  : int  148 85 89 78 197 166 118 103 126 119 ...
 $ bp   : int  72 66 66 50 70 72 84 30 88 80 ...
 $ skin : int  35 29 23 32 45 19 47 38 41 35 ...
 $ bmi  : num  33.6 26.6 28.1 31 30.5 25.8 45.8 43.3 39.3 29 ...
 $ ped  : num  0.627 0.351 0.167 0.248 0.158 0.587 0.551 0.183 0.704 0.263 ...
 $ age  : int  50 31 21 26 53 51 31 33 27 29 ...
 $ type : Factor w/ 2 levels "No","Yes": 2 1 1 2 2 2 2 1 1 2 ...

'data.frame':	200 obs. of  8 variables:
 $ npreg: int  5 7 5 0 0 5 3 1 3 2 ...
 $ glu  : int  86 195 77 165 107 97 83 193 142 128 ...
 $ bp   : int  68 70 82 76 60 76 58 50 80 78 ...
 $ skin : int  28 33 41 43 25 27 31 16 15 37 ...
 $ bmi  : num  30.2 25.1 35.8 47.9 26.4 35.6 34.3 25.9 32.4 43.3 ...
 $ ped  : num  0.364 0.163 0.156 0.259 0.133 ...
 $ age  : int  24 55 35 26 23 52 25 24 63 31 ...
 $ type : Factor w/ 2 levels "No","Yes": 1 2 1 1 1 2 1 1 1 2 ...

'data.frame':	300 obs. of  8 variables:
 $ npreg: int  5 7 5 0 0 5 3 1 3 2 ...
 $ glu  : int  86 195 77 165 107 97 83 193 142 128 ...
 $ bp   : int  68 70 82 76 60 76 58 50 80 78 ...
 $ skin : int  28 33 41 43 25 27 31 16 15 37 ...
 $ bmi  : num  30.2 25.1 35.8 47.9 26.4 35.6 34.3 25.9 32.4 43.3 ...
 $ ped  : num  0.364 0.163 0.156 0.259 0.133 ...
 $ age  : int  24 55 35 26 23 52 25 24 63 31 ...
 $ type : Factor w/ 2 levels "No","Yes": 1 2 1 1 1 2 1 1 1 2 ...
#+end_example

- The MASS package contains three different versions of the Pima
  indians [[https://rdrr.io/cran/MASS/man/Pima.tr.html][data set]] (diabetes in women of the Pima tribe)

- MASS metadata comments:

  #+begin_quote
  "The training set ~Pima.tr~ contains a randomly selected set of 200
  subjects, and ~Pima.te~ contains the remaining 332 subjects. ~Pima.tr2~
  contains ~Pima.tr~ plus 100 subjects with missing values in the
  explanatory variables."
  #+end_quote
  
- The [[https://www.kaggle.com/datasets/uciml/pima-indians-diabetes-database][kaggle.com database]] is yet another version: more records, one
  more variable - the "Metadata" information is missing

- Missing data are often coded as ~0~ instead of ~NA~ leading to errors:

  #+begin_quote
  "A number of studies characterizing /binary classifiers/ have been
  published using [the Pima] dataset as a benchmark where the authors
  were not aware that data values were missing." (Pearson, 2018)
  #+end_quote

* PROBLEM: VARIABLE DEFINITIONS

- How many planets are there orbiting the sun?

  #+attr_html: :width 500px
  [[../img/2_solarsystem.png]]

  #+begin_notes
  - Definitions count: e.g. /planethood/ (Weintraub, 2007)
    1. the object is too small to generate nuclear fusion energy
    2. the object is big enough to be spherical
    3. the object must have a primary orbit around a star

  - Unrecognized disagreements in the definition of a variable are
    possible between those who /measure and record/ it, and those who
    use data in /analysis/.

  - Prominent examples: when does a patient die of COVID-19? What is
    the cause of death? When do two patients have the same disease?
  #+end_notes

* EXPLORATORY DATA ANALYSIS (EDA)

#+attr_html: :width 500px
[[../img/2_pattern.png]]

#+begin_quote
"We look at /numbers/ or /graphs/ and try to find /patterns/. We pursue
leads suggested by background information, imagination, patterns
perceived, and experience with other data analyses." (Diaconis, 1985)
#+end_quote

- Analysis is always based on exploring /numbers/ (quantification)

- /Non-numerical/ data are converted to numbers: e.g. /categorical/
  variables are converted from /discrete/ named values ("political
  party", "city") into counts or relative /frequencies/

- In R, each discrete value or category is also called a /level/.
  #+name: level
  #+begin_src R :exports both :session :results output
    fv <- factor(c("male","female"))
    fv
  #+end_src

  #+RESULTS: level
  : [1] male   female
  : Levels: female male

* TYPES OF CATEGORICAL VARIABLES
#+caption: AI-generated outline for research topic (Source: OpenAI)
#+attr_html: :width 500px
[[../img/2_openai.png]]

- Few levels (e.g. "Firm", "Party", "City")

- Many levels (e.g. US ZIP code with 40,000 levels)

- Exploitable sub-structure (e.g. text data[fn:1])

* SOME ISSUES WITH GRAPHS

- Humans are better at seeing patterns in graphs than numbers[fn:3]
  #+attr_html: :width 500px
  #+caption: Anscombe dataset
  [[../img/2_anscombe.png]]

  - Use different graphs to explore and to explain - data mining is
    /exploratory/, data story telling is /explanatory/[fn:2]

  - Usefulness of a graph depends on *how data* are displayed, and
    strongly on *which data* are chosen to be displayed

* PRACTICE: RAW VS. TRANSFORMED GRAPH DATA

- The following two sets of plots are constructed from the ~brain~
  element of the ~mammals~ dataset from the ~MASS~ package that lists body
  and brain weights for 62 different animals.

- *What do you think which graphs are more meaningful and why?*

  #+begin_src R :file ../img/2_brain.png :exports both :session *R* :results output graphics file
    library(MASS)
    library(car)
    par(mfrow=c(2,2))
    truehist(mammals$brain)
    truehist(log(mammals$brain))
    qqPlot(mammals$brain)
    title("Normal QQ-plot")
    qqPlot(log(mammals$brain))
    title("Normal QQ-plot")
  #+end_src

  #+RESULTS:
  [[file:../img/2_brain.png]]

  #+begin_notes
  - The plots tell us something about the /distribution/ of data values.
  - The left-hand pair were generated from /raw data/ values, the
    right-hand pair were generated from /log-transformed/ data
  - The right-hand pair suggests that the data exhibit a /Gaussian/
    (normal) distribution
  #+end_notes

* R FOR EXPLORATORY ANALYSIS

#+attr_html: :width 700px
[[../img/2_xkcd_outlier.png]]

- Exploratory analysis has more use for graphical tools

- R supports many different graphical displays and plot types

- Important focus: searching for anomalies and outliers in the data

* DATA ANALYSIS WORKFLOW
#+attr_html: :width 600px
#+caption: Data analysis workflow (emanuelaf.github.io - modified)
[[../img/2_workflow.png]]

1. *Acquire*: make data available to the software
2. *Analyse*: perform the analysis
3. *Advise*: make analysis results available to those who need them

#+begin_notes
- In *training*, the emphasis is often on (2) analysis, and pre-loaded,
  small, clean datasets and well-tested packages are used.
- On the *job*, the emphasis is on (1) acquisition, and much time is
  spent importing and readying the data for analysis
- In *business*, the main interest is (3) advice for decision-making
  support, hence the shift to storytelling and interpretation
#+end_notes

* COMPUTERS
#+attr_html: :width 500px
#+caption: Von Neumann computer architecture (PSC Arivukal, 2020)
[[../img/2_computer.jpg]]

- RAM is several orders of magnitude faster than NVM
- Most R functions require raw data and results to fit in RAM
- OS and Internet impose infrastructure constraints[fn:4]

* WHY R?

#+attr_html: :width 200px
[[../img/2_Rlogo.png]]

- R is FOSS (Free Open Source Software) available for all OS
- Supported range of analysis methods ready for use
- Unix-style package and version control system
- Diverse, active community of users and developers

* THE STRUCTURE OF R
#+attr_html: :width 400px
#+caption: ggplot2 downloads from CRAN 2012-2020
[[../img/2_ggplot2.png]]

1. Set of /base R packages/ for basic statistics, data analysis, graphics
2. Set of /recommended packages/ included in installations (like ~MASS~)
3. Set of /optional add-on packages/ for special purposes

*Example:* The optional, popular ~ggplot2~ graphics package was downloaded
more than 272 mio. times between 2012 and 2020, with a monthly average
of > 800k downloads (Source: CRAN, 2021).

* INSTALLATION AND LOADING R PACKAGES

- We'll do this directly on the command line ([[https://bookdown.org/ndphillips/YaRrr/packages.html][see e.g. here]]):

- Installation = download and unpacking of binary or compilation (on
  Windows, when you're asked, do not compile from source):
  #+begin_example R
  install.packages("MASS")
  install.packages("car")
  #+end_example

- Loading = load package (functions + datasets) into current R
  session:
  #+begin_example R
  library(MASS)
  library(car)
  #+end_example

- Alternatively, you can use the Rgui program, or the RStudio IDE

* OPTIONAL INSTALLATION IN THE RGUI

- Start the Rgui from the CMD line terminal
- The Rgui includes a command line and graphics
- The RTerm or R program is a console only
- In the R GUI, find the tab "Packages"
- Set CRAN mirror site (closest to you)
- Install or update package from list

#+attr_html: :width 400px
#+caption: Package management in the Rgui program
[[../img/2_packages.png]]

#+attr_html: :width 400px
#+caption: Package management in the Rgui program
[[../img/2_packages1.png]]

#+attr_html: :width 400px
#+caption: Package management in the Rgui program
[[../img/2_packages2.png]]

* QUESTIONS TO ASK FROM DATA

1. Where does the dataset come from, and how is it documented?
2. How many records (rows) does this dataset contain?
3. How many fields (variables, columns) are included in each record?
4. What kinds of variables are these (e.g. numerical, categorical)
5. Are there missing values? (~NA~)
6. If there are missing values: are these variables always observed?
7. If there are missing values: how are they represented?
8. Are the variables included in the dataset the ones we expect?
9. Are the variable values consistent with what we expect?
10. Do the variables exhibit the relationships we expect?

* PRACTICE: A REPRESENTATIVE R SESSION

#+attr_html: :width 300px
[[../img/2_github.png]]

1) Open the course directory in GitHub,
   [[https://github.com/birkenkrahe/dviz]]
2) Open ~/org/2_data_eda_R_practice.org~
3) Open the ~raw~ version of the file
4) Save file as ~2_data_eda_Rpractice.org~
5) Right click on the file in Explorer
6) Change ~Opens with:~ property to Emacs
7) Open file with Emacs from the Explorer

Summary:
#+begin_comment
The GitHub directory contains all lecture and practice files. The ~raw~
version is the Org-mode file without markup 3 In Windows, you can set
a file type to be opened by one program (not possible in Linux or
MacOS because Unix does not know file type extensions.
#+end_comment

* CONCEPT SUMMARY

- Data are analysed to understand, predict, or guide decisions
- Data are entities, events or processes
- Meta data contain critical information for validation
- The data analysis workflow: acquire, analyze, advise
- R is FOSS, specialized on stats, and popular
- CRAN is the central hub for R package management

* GLOSSARY

| TERM                 | MEANING                         |
|----------------------+---------------------------------|
| Data frame           | Rectangular array               |
| Observation          | Recorded event                  |
| Attribute            | Characteristic                  |
| Meta data            | Data about data                 |
| Data                 | Entity, event, process          |
| Binary classifier    | Attribute with 2 values         |
| Missing value (~NA~)   | Values that were not recorded   |
| Categorical variable | Non-numerical, discrete         |
| Level                | Category, discrete value        |
| Anomaly, outlier     | Unusual data                    |
| CRAN                 | Comprehensive R Archive Network |
| Rgui                 | R console pgm with graphics     |
| Rterm                | R console (terminal) pgm only   |

* References

- CRAN (27 April 2021). Visualize downloads from CRAN
  Packages. [[https://cran.r-project.org/web/packages/Visualize.CRAN.Downloads/vignettes/Visualize.CRAN.Downloads.html][Online: cran.r-project.org]].
- OpenAI (2022). Example: Generate an outline for a research
  topic. [[https://beta.openai.com/examples/default-essay-outline][Online: beta.openai.com.]]
- Pearson, R.K. (2018). Exploratory Data Analysis Using R. CRC Press.
- PSC Arivukal (July 26, 2020). Basic Computer Architecture. [[https://www.pscarivukal.com/2020/07/basic-computer-architecture.html][Online:
  pscarivukal.com]].
- Revolutionanalytics (May 2, 2017). The Datasaurus Dozen. [[https://blog.revolutionanalytics.com/2017/05/the-datasaurus-dozen.html][Online:
  blog.revolutionanalytics.com]].

* Footnotes

[fn:4]Though they can also be enablers of education: e.g. Linux and
the command line shell as a data science tool, and online REPL
installations (usually Docker containers) as training grounds.

[fn:3]The plots show /Anscombe's quartet/ - four scatterplots which
despite having different numerical values all have identical mean,
variance, and standard correlation (Source: revolutionanalytics.com).

[fn:1]Text data can be normalized (reduced - e.g. parsed into words,
eliminating common words like "and", "of" and punctuation marks), and
converted to numbers. The numbers are analyzed mathematically, and the
result is transformed back to allow interpretation of the original
text data. This technique leads to impressive NLP feats (so-called
[[https://en.wikipedia.org/wiki/Transformer_(machine_learning_model)][transformer ML models]] based on massive mined data sets, like [[https://openai.com/api/][GPT-3]].)

[fn:2]This difference goes deeper than data science: explanatory
research is usually confirmatory (of some theory), while exploratory
research is used to construct, or build, theory. Personal note: All of
my own research has been exploratory.
