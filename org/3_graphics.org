#+TITLE:  Exploratory vs explanatory graphics & R graphics systems
#+AUTHOR: Marcus Birkenkrahe
#+Subtitle: Introdution to Data Visualization
#+STARTUP: hideblocks overview indent inlineimages
#+PROPERTY: header-args:R :exports both :results output :session *R*
#+ATTR_HTML: :width 600px
[[../img/3_matisse.png]]
- What's a snail?
- Exploratory vs explanatory graphics
- Plot arrays and their use
- Base graphics plot functions
- R packages: ~grid~, ~lattice~, ~ggplot~
- Which graphics package should you use?

#+begin_notes
Image: Matisse, The Snail/L'Escargot (1953). Gouache on paper, cut and
pasted,mounted on canvas, 268.4 x 287 cm). Tate Gallery, London.
#+end_notes
* What's a snail?
#+ATTR_HTML: :width 300px
[[../img/3_matisse.png]]
#+ATTR_HTML: :width 280px
[[../img/3_snail.png]]

- What is the purpose of "graphics". Give some examples!
- What does "The Snail" by Matisse achieve as graphics?
- See also: [[https://www.moma.org/interactives/exhibitions/2014/matisse/the-swimming-pool.html][The Swimming Pool]], [[https://thegoodlifefrance.com/the-story-of-the-matisse-chapel-in-vence-south-of-france/][Matisse and the Chapelle du Rosaire]]

#+begin_notes
- Graphics: beauty/aesthetics, abstract representation of data
- Technique: color, line, medium, object, artist (subject)
- Origin: something written or drawn (also: basic unit of speech)
- John 8:6-8 "Jesus bent down and started writing on the ground with
  his finger." The Pharisees leave and Jesus is alone with the woman
  whom he saved from being stoned to death for adultery.
- Graphics examples: artistic, [[https://www.austinchronicle.com/binary/05ca/arts_feature1-1.jpg][architecture]], [[https://media.slidesgo.com/storage/75701/responsive-images/2-graphic-design-marketing-plan___media_library_original_1119_629.jpg][marketing]], [[https://design-milk.com/flowo-typewriter-e-ink-concept/][product design]]
#+end_notes

* Infographics vs. data visualization

*How would you describe the difference? Got an example?*

* Infographics

- Aesthetically rich (i.e. beautiful/nice to look at)
- Manually drawn (i.e. hard to create/alter/check)
- Represents specific data source

Example: 8-business-model Cow ([[https://www.entrepreneur.com/starting-a-business/this-cow-illustrates-8-business-models-infographic/292515][Leadem, 2017]])
#+attr_html: :width 200px
[[../img/cow.png]]

* Data visualization

- Aesthetically barren (i.e. not decorated/beautiful)
- Algorithmically drawn (i.e. easy to create/alter/check)
- Rich in data details

Example: interactive network visualization with [[https://cran.r-project.org/web/packages/visNetwork/vignettes/Introduction-to-visNetwork.html][visNetwork in R]]
([[https://www.r-bloggers.com/2019/06/interactive-network-visualization-with-r/][Junker, 2019]])
#+attr_html: :width 200px
[[../img/visedges.png]]

* Exploratory vs explanatory data visualization

*How would you describe the difference? Got an example?*

* Exploratory data visualization

- Helps us to understand what is in a *data set*
- Alternate name: Exploratory Data Analysis (EDA)
- Quickly *identify* features, curves, lines, trends, anomalies
- Best done at a high level of *granularity*
- Difficulty: separate *signals* from *noise*

Example: CRAN ggplot2 package downloads 2012-2019
#+attr_html: :width 300px
[[../img/2_ggplot2.png]]

[[https://cran.r-project.org/web/packages/Visualize.CRAN.Downloads/vignettes/Visualize.CRAN.Downloads.html][Image source: Visualize.Cran.Downloads]] (CRAN, 2021)

* Explanatory data visualization

- Help us *convey* findings to others
- Alternate name: Data Storytelling
- Known to you at the outset (apart from *feedback*)
- *Design* to accommodate a particular *audience*
- Best done after *editorial decisions* what is relevant
- Difficulty: *selecting* focused data that support your *story*

Example: Creating a visual CV using R
#+attr_html: :width 500px
[[../img/3_cv.png]]

Source: [[https://mmarteaga.github.io/post/VisualCV/][How to create a visual CV using R!]] (Arteaga, 2021)
* Preparations to code along

[[../img/emacsprep.png]]

- Open a new Org-mode file ~plot.org~ in Emacs

- Put this line at the top of the file ~plot.org~:

  ~#+PROPERTY: header-args:R :results output :session *R*~

- Activate the code by putting your cursor on the line and entering
  ~C-c C-c~. You should see the message ~Local setup has been refreshed~
  in the minibuffer at the bottom of the editor.

- When you execute your first R code block, you'll be asked where you
  want the session named ~*R*~ to run: enter the path to ~plot.org~

- For plots, use the header ~:results output graphics file :file plot.png~

- When you leave Emacs, you'll be warned that the session ~*R*~ is
  active: you can ignore this warning
* Extended example: US cereal data
[[../img/cereal.jpg]]

- Using: ~UScereal~ data frame from the ~MASS~ package
- 11 characteristics of 65 breakfast cereals available for sale
- Information mostly based on the package label required by US FDA

#+begin_src R :session :results output
  library(MASS)  # load MASS package
  data(UScereal) # load UScereal data frame
  str(UScereal)  # display data frame structure
#+end_src

#+RESULTS:
#+begin_example
'data.frame':	65 obs. of  11 variables:
 $ mfr      : Factor w/ 6 levels "G","K","N","P",..: 3 2 2 1 2 1 6 4 5 1 ...
 $ calories : num  212 212 100 147 110 ...
 $ protein  : num  12.12 12.12 8 2.67 2 ...
 $ fat      : num  3.03 3.03 0 2.67 0 ...
 $ sodium   : num  394 788 280 240 125 ...
 $ fibre    : num  30.3 27.3 28 2 1 ...
 $ carbo    : num  15.2 21.2 16 14 11 ...
 $ sugars   : num  18.2 15.2 0 13.3 14 ...
 $ shelf    : int  3 3 3 1 2 3 1 3 2 1 ...
 $ potassium: num  848.5 969.7 660 93.3 30 ...
 $ vitamins : Factor w/ 3 levels "100%","enriched",..: 2 2 2 2 2 2 2 2 2 2 ...
#+end_example

* Exploratory plot array

A useful, and common, exploratory plot is a panel of pairwise
scatterplots to summarize the data frame.

#+begin_src R :exports both :session :results output graphics file :file ../img/cereal.png
  plot(UScereal, las = 2)
#+end_src

#+RESULTS:
[[file:../img/cereal.png]]

#+begin_notes
- The ~las~ parameter sets the position of the tick labels - ~las=2~ means
  always perpendicular to the axis.
- Diagonal elements of the array list the name of the variable in the
  x-axis of all plots in that column, and the y-axis of all plots in
  that row.
- For 11 variables, 110 plots are shown. Some indicate strong
  relationships, e.g. ~fat~ and ~calories~.
- Some variables, like ~vitamins~, show only few values
#+end_notes

* Explanatory scatterplot

#+attr_html: :width 400px
[[../img/scatterplot.png]]

#+begin_notes
- Scatterplot of calories vs. sugar variables, augmented with a robust
  regression line ("[[https://en.wikipedia.org/wiki/Robust_regression][robustness]]" refers to assumptions about the data)
- Dashed line highlights the trend our eye sees in the data if we
  ignore the two outlying points.
- The outliers correspond to cereals that have much higher calories
  than any of the others.
- The annotation of labels and text in the plot further aids the
  interpretation.
#+end_notes

#+begin_src R :exports both :session :results output graphics file :file ../img/3_calories.png :exports both
  plot(data=UScereal, calories ~ sugars)
#+end_src

#+RESULTS:
[[file:../img/3_calories.png]]

* Base graphics plot functions

- Base graphics is the system originally built into the R language
- It's most common generic function is ~plot~
- Base graphics are controlled by 72 graphics /parameters/
- Displays can be customized by /low-level/ plotting functions
- Examples: ~abline~, ~lines~, ~points~, ~text~, ~legend~ etc.

#+name: tab:graphicsfunctions
| FUNCTION      | OBJECT TYPE            | NATURE OF PLOT[fn:1]         |
|---------------+------------------------+------------------------|
| ~plot~          | Many                   | Depends on object type |
| ~barplot~       | Numeric                | Bar plot               |
| ~boxplot~       | Formula, numeric, list | Boxplot summary        |
| ~hist~          | Numeric                | Histogram              |
| ~sunflowerplot~ | Numeric + Numeric      | Sunflower plot         |
| ~mosaicplot~    | Formula or table       | Mosaic plot            |
| ~symbols~       | Multiple numeric       | Bubbleplots etc.       |

* Many many types of built-in diagrams

- There are more than 40 types of useful diagrams in R
  #+caption: Source: R graph gallery
  #+attr_html: :width 500px
  [[../img/rgraph.png]]

* ~grid~ graphics

- The ~grid~ package uses the [[https://www.rdocumentation.org/packages/grDevices/versions/3.6.2][grDevices]] graphics engine

- Some packages use it, e.g. [[https://cran.r-project.org/web/packages/vcd/index.html][vcd]] (for graphing categorical variables)

- Nothing to do with the ~grid~ function of the base R package (which
  draws a grid over the plot, see ~?grid~)

- More info: [[https://www.stat.auckland.ac.nz/~paul/grid/grid.html#downloaddocs][Paul Murrell's documents]]

#+attr_html: :width 500px
[[../img/grid.png]]
* ~grid~ graphics example

- The following plot is generated with the base R (built-in)
  package. Below you find the code to create this plot using the ~grid~
  package, demonstrating the greater flexibility but also steeper
  learning curve.

- Scatterplot with base R ~plot~
  #+begin_src R :exports both :results output graphics file :file ../img/3_cereal.png
    library(MASS)
    plot(UScereal$sugars,UScereal$calories)
    title("plot(UScereal$sugars,UScereal$calories)")
  #+end_src

  #+RESULTS:
  [[file:../img/3_cereal.png]]

- Scatterplot with ~grid~ package:
  #+begin_src R :exports both :results output graphics file :file ../img/3_grid.png
    library(MASS)
    x <- UScereal$sugars
    y <- UScereal$calories
    library(grid)
    pushViewport(plotViewport())
    pushViewport(dataViewport(x,y))
    grid.rect()
    grid.xaxis()
    grid.yaxis()
    grid.points(x,y)
    grid.text("UScereal$calories",x=unit(-3,"lines"),rot=90)
    grid.text("UScereal$sugars",y=unit(-3,"lines"),rot=0)
    popViewport(2)
  #+end_src

  #+RESULTS:
  [[file:../img/3_grid.png]]
  
* ~lattice~ graphics

- Based on grid graphics, shipped with base R (needs to be loaded)

- Alternative implementation to many standard plotting functions,
  including scatterplots, bar charts, boxplots, histograms, QQ-plots

- [[https://cran.r-project.org/web/packages/lattice/lattice.pdf][lattice]] has different default options for plot customization and
  some additional features, like the /multipanel conditioning plot/

  #+begin_src R :exports both :results output graphics file :file ../img/lattice.png
    library(MASS) # load MASS package for Cars93 data set
    library(lattice) # load lattice package

    ## plot MPG.city vs. Horsepower, conditioned by Cylinders
    xyplot(MPG.city ~ Horsepower | Cylinders, data = Cars93)
  #+end_src

  #+RESULTS:
  [[file:../img/lattice.png]]

- You can ~group~ variables and get an automatic legend per group

- Price to be paid: simple annotations are harder to do than base R

* Grammar of graphics with ~ggplot2~

- Grammar of graphics construction based on human perception

- Better support for multipanel conditioning plots

- Highly extensible, complex, steep learning curve ([[https://ggplot2.tidyverse.org/][see here]])

#+attr_html: :width 500px
#+caption: Grammar of Graphics (gg) philosophy
[[../img/gg.png]]

* Concept summary

- Infographics are design-rich and built to inform, data
  visualizations (and dashboards) are data-rich and built to be
  flexible and alterable

- Exploratory/explanatory graphics have different challenges. EDA:
  separate signal from noise; storytelling: tell a good story!

* Code summary

| COMMAND | MEANING                                 |
|---------+-----------------------------------------|
| ~method~  | Available methods for generic functions |

* Glossary
| TERM                 | MEANING |
|----------------------+---------|
| Infographics         |         |
| Data visualization   |         |
| Exploratory graphics |         |
| Explanatory graphics |         |

* References

- Arteaga M (20 January, 2021). How to create a visual CV using
  R!. [[https://mmarteaga.github.io/post/VisualCV/][Online: mmarteaga.github.io]].
- CRAN (27 April 2021). Visualize downloads from CRAN
  Packages. [[https://cran.r-project.org/web/packages/Visualize.CRAN.Downloads/vignettes/Visualize.CRAN.Downloads.html][Online: cran.r-project.org]].

* Footnotes

[fn:2] "Color me impressed" is also a [[https://youtu.be/9_358OhIRqo][song by The Replacements]]. It
contains the uplifting lines: Everybody at your party / They don't
look depressed / And everybody's dressin' funny / Color me impressed.

[fn:1]Plot types not seen in this lecture yet: sunflower plots
(scatterplots that reduce overplotting by turning multiple points into
petals); mosaic plots (mosaic of rectangles whose height represents
the proportional value); bubbleplots (scatterplot with a third
dimension represented with the size of the dots).
