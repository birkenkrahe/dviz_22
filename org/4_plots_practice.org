#+TITLE: Practice: Adding details to plots
#+SUBTITLE: A quick introduction to base R graphics
#+AUTHOR: [yourname] (pledged)
#+STARTUP: overview hideblocks indent inlineimages
#+PROPERTY: header-args:R :exports both :results output :session *R*
* README

- Practice file for scatterplot customization (see [[https://github.com/birkenkrahe/dviz/blob/piHome/org/4_plot.org][GitHub lecture]])
- Add your name and ~(pledged)~ in the ~#+AUTHOR:~ meta headline
- When you've completed the file, submit it in Canvas
- You'll get solutions after the deadline has passed

* TODO Identify yourself

1) Add your name and ~(pledged)~ at the top
2) Run the ~#+PROPERTY~ and ~#+STARTUP~ lines with ~C-c C-c~

* TODO Getting the data

1) Download ~data.csv~ to the same directory as the practice file:
   [[https://tinyurl.com/spdnvxbr][tinyurl.com/spdnvxbr]]

2) Save data from the local CSV file to an R data frame ~df~:
   #+begin_src R
     df <- read.csv(
            file="dataset.csv",
            header=TRUE)
     str(df)
   #+end_src

* TODO Plotting the data

1) For the R code blocks with graphics output, you need these header
   arguments in this format exactly when writing to a file ~plot.png~ in
   the current directory:

   ~:results graphics file :file plot.png~

2) Save the ~Weight~ vector as ~x~ and the ~Height~ vector as ~y~ for later.

3) Create a scatterplot of the weight on the ~x~ axis and the height on
   the ~y~ axis. Save the plot as ~scatter.png~.

* TODO Customize the plot

1) Customize the plot by using different point characters to identify
   all people, who are equal to or taller than 180 cm, and save the
   resulting plot as ~pch.png~.

   - Define an appropriate ~index~ vector using the ~which~ function
   - Call ~plot~ as before but don't draw any points
   - Call ~points[index]~ for outliers ,and ~points[-index]~ for others
   - Inside the ~points~ function calls, use ~pch=18~ and ~cex=1~ for the
     outliers, and ~pch=6~, ~cex=1.3~ for the other points

2) Label the axes and give the plot a suitable title. Save your final
   plot in ~final.png~. 
  

* TODO Add a trendline

In the last plot, we indexed all male participants taller than or
equal than 180 cm (about 6'). Now we want to 1) add a trendline, 2)
add a suitable legend.

1) To add a trendline, define a model using the ~lm~ function on the two
   coordinate vectors ~y~ and ~x~, and store it in ~trend~

   #+begin_src R
     ...
   #+end_src

2) Use the model's intercept and slope values to draw a red, dashed,
   thick trend line. Store the resulting graph in ~trend.png~.

   You need to recreated the calls to ~plot~ and ~points~ for this
   graph. Draw this graph first, then add the trendline.

   #+begin_src R :results graphics file :file trend.png
     plot(y ~ x, type="n",
          main="Weight vs. Height of 10 people",
          ylab="Weight", xlab="Height")
     points(x[index], y[index], pch=18, cex=2)
     points(x[-index], y[-index], pch=6, cex=1.3)
     ...
   #+end_src

* TODO Add text for outliers

Add the text "Outlier" to the three outlying points of the
plot. You can use the following label: ~paste("Outlier -->")~. Use
the parameter ~adj=1~ to align the text.

Use the previous code block and store the graph in ~text.png~.

#+begin_src R :results graphics file :file text.png
  plot(y ~ x, type="n",
       main="Weight vs. Height of 10 people",
       ylab="Weight", xlab="Height")
  points(x[index], y[index], pch=18, cex=2)
  points(x[-index], y[-index], pch=6, cex=1.3)
  abline(trend, lty = 2, lwd = 2, col = "red")
  ...
#+end_src

* TODO Add a legend

Add a legend for the trendline and for the two plot point types.

