 #+TITLE:Agenda - DSC 302
#+AUTHOR:Marcus Birkenkrahe
#+SUBTITLE:Agenda DSC 302 - Data Visualization, Fall 2022
#+STARTUP:overview hideblocks indent inlineimages
#+PROPERTY: header-args:R :exports both :results output :session *R*
#+OPTIONS: toc:nil num:nil ^:nil
:REVEAL_PROPERTIES:
#+REVEAL_ROOT: https://cdn.jsdelivr.net/npm/reveal.js
#+REVEAL_REVEAL_JS_VERSION: 4
#+REVEAL_THEME: black
#+REVEAL_INIT_OPTIONS: transition: 'cube'
:END:
* README

- DSC 302 focuses on data visualization, and especially EDA
  (Exploratory Data Analysis).
- We use R as a language, GNU Emacs as editor, ESS as statistics
  extension, and Org-mode for [[http://www.literateprogramming.com/][literate programming]]
- For details on objectives, audience, grading, schedule, check the
  [[https://github.com/birkenkrahe/dviz/blob/piHome/org/syllabus.org][syllabus]] or the [[https://github.com/birkenkrahe/org/blob/master/FAQ.org][FAQ]] on GitHub.
- This file contains a (dynamically updated) agenda for each session
  as well as some content.
- You can also look at [[https://github.com/birkenkrahe/dviz/blob/piHome/org/agenda.org][the agenda on GitHub]].

* FAQ - Frequently Asked Questions

#+attr_html: :width 300px
#+caption: Three Spheres II, M.C. Escher (1946)
[[../img/escher.jpg]]

- [[https://github.com/birkenkrahe/org/blob/master/FAQ.org][Frequently Asked Questions @GitHub]]
- First place to go to with a general question
- FAQ is regularly updated with new content

* Week 1: Introduction to the course
#+attr_hmtl: :width 400px
[[../img/2_brain.png]]
** Objectives

- [X] Mutual introductions
- [X] Review: prerequisites (see email from July 18)
- [X] Review: Entry test
- [X] Lecture: Course overview
- [X] Practice: course infrastructure
- [X] First assignments and tests
- [ ] [[file:1_overview.org][Glossary]]

** Prerequisites

#+attr_html: :width 400px
#+caption: Napoleon's retreat from Moscow (Adolph Northen, 1851)
[[../img/napoleon.jpg]]
#+begin_quote
In DSC 302 (Data Visualization), familiarity with the basics of R
would be useful (though, again, we'll learn coding as we go
along). Check the FAQ. The quickest route: complete course
"Introduction to R" in DataCamp. Contact me for free access. Textbook:
Exploratory Data Analysis Using R, chapter 1-8, by R K Pearson (CRC
Press, 2018).
#+end_quote

- General preparation: [[https://github.com/birkenkrahe/org/blob/master/FAQ.org#how-can-i-prepare-for-your-data-science-classes][see the FAQ]] - R, Emacs + ESS + Org-mode
#+begin_notes
Napoleon committed what is called a statistical "Type II" error: he
assumed that the Russians would behave like all his other enemies
had. This was his "null hypothesis", which he should have rejected. If
he had, he might have conquered Russia and would like have created a
different Europe than we know it.
#+end_notes
** Assignments for next week

- By Monday Aug 22, 3 pm: [[https://lyon.instructure.com/courses/571/assignments/1649][GNU Emacs online tutorial]] - you need to
  alter, save and submit the tutorial to Canvas. You should also get
  Emacs + ESS for your PC.

- By Monday Aug 22, 3 pm: [[https://lyon.instructure.com/courses/571/assignments/1693/edit?quiz_lti][Test 1 (Course infrastructure)]] - you
  complete this 5-question quiz in Canvas.

- By Friday Aug 26, 11 am: [[https://lyon.instructure.com/courses/571/assignments/1647][Visualizing distributions (DataCamp)]] - you
  have to register with DataCamp and join the Lyon group for fall '22.

- By Wednesday Aug 24, 3 pm: Enter a project idea and team member
  names, and your question(s) [[https://lyon.instructure.com/courses/571/pages/enter-your-project-idea-and-participants-here][in this table in Canvas]].

- For general questions, you can use the Google chat for this course
  (invitation only)

- Get the mobile app! (Canvas student)

  #+attr_html: :width 200px
  [[../img/mobile.png]]

** Practice - course infrastructure

*IF YOU ALREADY DID THIS IN ANOTHER CLASS: FINISH THE EMACS TUTORIAL!*

*Useful:* take notes! Practice leads to mastery and the practice
exercises will often come back to haunt you in the tests.

1) Open a browser
2) Find the GitHub repos (birkenkrahe/dviz and /org)
3) Open the command line terminal
4) Open/close R
5) Open Emacs
6) Find the Emacs tutorial
7) Open/close R inside Emacs
8) Run R in an Org-mode file
9) Close Emacs
10) Close the command line terminal

Note: Class room practice completion = 10 points each for active
participation (if there's a practice file, you can make up).

([[https://github.com/birkenkrahe/dviz/blob/piHome/org/1_practice.org][Link to practice file in GitHub]])

* Week 2: Getting started
#+attr_html: :width 400px
[[../img/graphics.png]]

- [X] Getting started with projects
- [X] Quiz 1: course infrastructure
- [ ] Lectures: Data, Exploratory Data Analysis, and R
- [X] Practice: Metadata identification
- [ ] Practice: Representative R session

** DONE Home assignments - how they work
#+attr_html: :width 400px
#+captions: course infrastructure
[[../img/platforms.png]]

- Assignment is posted on [[https://lyon.instructure.com/courses/571/assignments][Canvas]] (includes the link)
- Assignment must be completed on time on [[https://app.datacamp.com/groups/lyon-college-data-science-fall-2022/assignments][DataCamp]]
- You loose 1 point for every day of late submission
- Canvas Gradebook is updated manually (with some delay)

** DONE Getting started with projects

- Course has 15 participants!

- You'll have to do the project in a team - 2 to 3 people

- I can only accommodate at most 9 projects (last week of term)
- Put your team/ideas into this table ([[https://lyon.instructure.com/courses/568/pages/enter-your-project-idea-and-participants-here][Canvas]]) by Wednesday

- [X] *Who has not yet found a team?*

- [X] *Who has a team but no idea what to do?*

- Reminder: plenty of project opportunities ([[https://github.com/birkenkrahe/dviz/blob/piHome/org/1_overview.org#many-project-opportunities][overview]] / GitHub [[https://github.com/birkenkrahe/dviz/issues][issues]])

- Recommended: overview of visualization in data science (no coding):
  "Preparation, Exploration and Visualization" [[https://app.datacamp.com/learn/courses/data-science-for-everyone][in this DataCamp course]]
** DONE Project idea: datasaurus dozen
#+attr_html: :width 600px
[[../img/datasaurus.png]]

- Featured example: [[https://www.autodesk.com/research/publications/same-stats-different-graphs][Datasaurus Dozen in R (or Python)]] (see also [[https://youtu.be/iwzzv1biHv8][video]])

** DONE Business dashboard example
#+attr_html: :width 500px
[[../img/dashboard.png]]

- The image shows a Power BI dashboard that "uses visualizations to
  tell a story. Because it is limited to one page, a well-designed
  dashboard contains only the most-important elements of that
  story. The visualizations you see on the dashboard are called /tiles/
  and are /pinned/ to the dashboard by report /designers/ [...] Selecting
  a tile takes you to the report page where the visualization was
  created."

#+attr_html: :width 500px
[[../img/dashboard1.png]]

- "The visualizations on a dashboard come from reports and each report
  is based on one dataset. In fact, one way to think of a dashboard is
  as an entryway into the underlying reports and datasets. Selecting a
  visualization takes you to the report that was used to create it."

  (Text and image source: Microsoft, 2021)

- DataCamp offers a [[https://app.datacamp.com/learn/courses/introduction-to-power-bi][Power BI course]] - in this course, you'll start
  with Tableau instead (completely comparable product).

** DONE Meta data example: nuclear winter
#+attr_html: :width 500px
[[../img/nuclear.jpg]]

- This is strangely similar to simulations that I ran in the 1990s

- [[https://github.com/birkenkrahe/dsmath/issues/27]["Nuclear war between US, Russia would leave 5 billion dead from
  hunger"]] - you can follow this story through three different
  reference frames: 1) USA Today, which is quoting 2) Nature, which is
  quoting 3) the original article. Each time, the meta data changes.

- I mixed this up with [[https://github.com/birkenkrahe/dsmath/issues/26]["Disproving a 60-year-old hypothesis: most
  'silent' mutations are actually harmful"]]

** DONE 1st sprint review - Wed 31-Aug

- [[https://lyon.instructure.com/courses/571/assignments/1689][Canvas assignment with submission]]
- Complete [[https://lyon.instructure.com/courses/571/pages/enter-your-project-idea-and-participants-here][projects overview table]] in Canvas *today*!
- If you are in > 1 course, you can use the same project idea!

  [[../img/flocking.jpg]]

  - Featured project idea: "[[https://processing.org][Processing]]" for visual artists - see
  e.g. [[https://processing.org/examples/flocking.html]["Flocking"]] to simulate the flocking behavior of birds.

  #+begin_quote
  "Processing is a flexible software sketchbook and a language for
  learning how to code. Since 2001, Processing has promoted software
  literacy within the visual arts and visual literacy within
  technology."
  #+end_quote

** DONE Review: What's the problem with meta data?

[[../img/review.jpg]]

#+begin_quote
- *Completeness* - origin
- *Consistency* - logic, values, (time) dependency
- *Accuracy* - origin and validity
#+end_quote

** DONE Project idea: "Count" dashboard ([[https://count.co/][count.co]])

** DONE Test 2 open ("Data, EDA, and R")

** DONE Practice: Run R in Org-mode file

- [[https://github.com/birkenkrahe/dviz/blob/piHome/org/1_overview_practice.org#run-r-in-org-mode-file][Instructions in GitHub]]
- Update your Emacs configuration file
- Check that you can run R inside Emacs

** TODO Practice: a representative R session

1) Questions to ask from data
2) [[https://github.com/birkenkrahe/dviz/blob/piHome/org/2_data_eda_R_practice.org][Download the file]]
3) Complete the file
4) Upload the completed file to [[https://lyon.instructure.com/courses/571/assignments/1704][Canvas]]

* Week 3: Extended R example
#+attr_html: :width 400px
[[../img/rainforest.jpg]]

- [ ] [[file:~/Documents/R/dviz/2_data_eda_R_practice.org][Complete practice file]]
- [X] DataCamp lesson: [[https://app.datacamp.com/learn/courses/data-visualization-for-everyone][visualizing distributions]] (by Aug 26)

** READ Monday Aug 29 last day to drop class

[[../img/drop.png]]

(https://my.lyon.edu/ICS/Academics/Student_Forms.jnz)
** DONE DataCamp: visualizing distributions

- What did you think of this lesson?
- Review question: when do you use histograms?
- Review question: when do you use boxplots?

#+begin_notes
- Histogram: you have a single numeric-continuous variable, and you
  want to ask questions about the shape of its distribution/frequency.
- Example: ~Nile~ dataset

  #+begin_src R :file ../img/nile.png :exports both :session :results output graphics file
    hist(Nile)
  #+end_src

  #+RESULTS:
  [[file:../img/nile.png]]

- Boxplot: single numeric-continuous variable split by a categorical
  variable, and you want to compare distributions for each category.
- Example: ~ToothGrowth~

  #+begin_src R :file ../img/tg.png :exports both :session :results output graphics file
    boxplot(ToothGrowth$len ~ ToothGrowth$supp)
  #+end_src

  #+RESULTS:
  [[file:../img/tg.png]]

#+end_notes

** PROJECT Project idea: [[https://github.com/birkenkrahe/dviz/issues/29][healthcare data visualization]]
** READ GNU Emacs: ref cards
#+attr_html: :width 400px
[[../img/gnu.jpg]]

- [ ] The power of Dired on one page ([[https://github.com/birkenkrahe/org/blob/master/emacs/dired-ref.pdfhttps://www.gnu.org/software/emacs/refcards/pdf/dired-ref.pdf][v28]])
- [ ] The power of Emacs on two pages ([[https://www.gnu.org/software/emacs/refcards/pdf/refcard.pdf][v27]])

** Practice: extended R EDA example

- histogram with ~hist~ and ~boxplot~
- ~head~ and ~tail~
- structure of a data set with ~str~
- ~factor~ vectors have distinct values (~levels~)

** Review [[https://lyon.instructure.com/courses/571/assignments/1715][test 2 - data, EDA, and R]]

- *Dataset help:* What does ~MASS::Boston~ mean?

- *Article meta data* that need to be reviewed critically to analyze an
  article, include 1) reference, 2) acknowledgements with contributing
  experts (this is unusual).

- *Products are not data*. Data: (information) entity, event, process.

- Why do *non-numerical* data have to be converted to numbers?

* Week 4: Visualizing two variables
#+attr_html: :width 500px
[[../img/market.jpg]]

- [X] DataCamp Data Literacy month
- [X] Review: 1st sprint review
- [X] Review: Visualizing two variables
- [X] Practice: scatterplots & barcharts & customization
- [X] Review: test 3 - looking at data
- [X] Lab: comparing two similar data frames

** READ [[https://github.com/birkenkrahe/org/blob/master/FAQ.org#how-do-emacs--org-mode--ess-work-work-together][How Emacs, Org-mode and ESS work together]]
#+attr_html: :width 500px
[[../img/emacsorg.png]]

** READ DataCamp Data Literacy month
#+attr_html: :width 400px
[[../img/dataliteracymonth.png]]

A bunch of webinars on different aspects of data literacy, "the
ability to read, write, communicate, and reason with data. Data
literacy skills are foundational for succeeding in the 21st century,
and are the prerequisites for a career in data." ([[https://www.datacamp.com/data-literacy-month][DataCamp]])

** DONE Review: 1st sprint review
#+attr_html: :width 500px
[[../img/lost.jpg]]

- Some of you did not enter information in the overview sheet and/or
  did not submit a sprint review

- You can and should still submit (2 pts penalty per day of late
  submission)

- If you double up with another course, your sprint reviews need to
  reflect different research questions, or methods, or results

- Important: references and sources.

- Next sprint review: 30th September

** DONE Review: Visualizing two variables
*** Example: Nile
- Plot example: use ~Nile~ data set
  #+begin_src R :results output
                                            # ?Nile ## what's in the data set?
    str(Nile)
  #+end_src

  #+RESULTS:
  :  Time-Series [1:100] from 1871 to 1970: 1120 1160 963 1210 1160 1160 813 1230 1370 1140 ...

  #+begin_src R :file ../img/line.png :results output graphics file
    plot(Nile)
  #+end_src

  #+RESULTS:
  [[file:../img/line.png]]

*** Line plots
- Swiss "Jugendstrafrechtspflege" (juvenile offender stats, [[https://www.zh.ch/de/sicherheit-justiz/jugendstrafrecht/zahlen-fakten.html#446794079][source]]).
  Contrast the two plots: what's different?
  #+attr_html: :width 400px
  [[../img/offenders1.png]]
  #+attr_html: :width 400px
  [[../img/offenders2.png]]
*** Boxes vs bars
- Box plots vs. bar plots: what's the difference?
  #+attr_html: :width 600px
  [[../img/boxbar.png]]

  #+begin_notes
  - Box plots answer questions about value spread using measures of
    spread, here: age spread (categorical variable splits data)
  - Bar plots answer questions about the frequency of a single
    continuous metric relative to zero, here: count.
  - In bar plots, other single continuous variables can also be
    plotted, but the results are less insightful than the box plot
  #+end_notes
*** Bars vs stacks

- When would you rather show /stacked bar plots/ than bar plots?

  #+begin_notes
  When you care about percentages. Each stack adds up to 100%
  #+end_notes
*** Bars vs dots

- When should you use a dot plot?
  #+attr_html: :width 600px
  [[../img/dotplots.png]]

  #+begin_notes
  - You have a categorical variable
  - Display numeric scores by category logarithmically - since bars
    must always begin at 0, the log of 0 is infinite, so there is no
    log scale for bar plots
  - Display multiple numeric scores for each category
  #+end_notes

** DONE Extended EDA example in R

[[../img/2_analysis.svg]]
** READ Review test 3: looking at data

*Some of you had difficulty with the following questions:*

1) What does ~??whiteside~ return? (60%)
2) Command to plot ~Gas~ against ~Insul~ for ~whiteside~? (65%)
3) Histograms show ... (80%)
4) Header arguments to generate ~plot.png~ one level up? (80%)
5) What are the ~summary~ stats elements? (80%)
6) Function to turn a ~factor~ into a ~character~ variable? (90%)
7) What is the /upper quartile/?

*Answers:*

1) What does ~??whiteside~ return?
   - Fuzzy search for keyword across all packages

2) Command to plot ~Gas~ against ~Insul~ for ~whiteside~?)
   #+begin_src R :file ../img/gas.png :session :results output graphics file
     library(MASS)
     boxplot(Gas ~ Insul, data=whiteside)
   #+end_src

   #+RESULTS:
   [[file:../img/gas.png]]

3) Histograms show the distribution of a single continuous variable

4) Header arguments to generate ~plot.png~ one level up?

   ~:file ../plot.png :results graphics file~

5) What are the ~summary~ stats elements?
   - Median, mean, lower/upper quartile, sample min/max

6) Function to turn a ~factor~ into a ~character~ variable?
   - ~as.character~

7) What is the /upper quartile/?
   - The set of values that are smaller or equal than 75% of all
     values in the sample
** DONE Lab: Comparing two data frames
#+attr_html: :width 500px
[[../img/lab.jpg]]

- Download/open the practice file from GitHub: [[https://tinyurl.com/4rfwc8md][tinyurl.com/4rfwc8md]]

- Put your name and ~[pledged]~ next to it in the meta data header

- When you have completed the exercise, submit the Org-file [[https://lyon.instructure.com/courses/571/assignments/2806][in Canvas]]

- If you missed this class session, you can submit the file late
* Week 5: R graphics
#+attr_html: :width 300px
[[../img/king.png]]

- [X] Featured vizApp: [[https://hackaday.com/2022/09/07/organise-your-hacks-with-treesheets-an-open-source-hierarchical-spreadsheet/][TreeSheets hierarchical spreadsheet]]
- [X] DataCamp review - The color and the shape
- [X] Exploratory vs. explanatory graphics & R graphics systems
- [X] Complete 1st DataCamp course this week (add to your resume)
- [X] Test 4 review - color, plots, and comparison of data frames

** DataCamp review - The color and the shape

1) What is GNI? Difference between GNI, GNP and GDP?
2) Does it make sense to plot GNI vs. life expectancy vs. schooling?
3) What are plot dimensions besides spatial coordinates?
4) What is the "Viridis" color palette? /[potential project topic]/
5) What are correlation heatmaps useful for?

#+begin_notes
1) What is GNI? Difference between GNI, GNP and GDP? - According to
   [[https://en.wikipedia.org/wiki/Gross_national_income][Wikipedia]], GNI (same as GNP) and GDP can differ greatly for
   developing nations, because of foreign aid and capital inflow.
   #+attr_html: :width 400px
   [[../img/gni.png]]

2) Does it make sense to plot GNI vs. life expectancy vs. schooling?
   Remember that correlation is not causation. Correlating
   characteristics however does suggest causation. In this case:
   higher life expectancy seems to be the consequence of long
   schooling and a high GNI. However, does this have to be true?
   Which factors that could invalidate this conclusion? What are
   the weaknesses of the chosen characteristics?[fn:1]

3) What are plot dimensions besides spatial coordinates?
   - color (best option)
   - size (issues with distinguishability, importance)
   - levels of transparency (issues with distinguishability)
   - shape (issues with distinguishing shapes)
   - panels (good for trends)

4) What is the Viridis color palette? - "~viridis~, and its companion
   package ~viridisLite~ provide a series of color maps that are
   designed to improve graph readability for readers with common forms
   of color blindness and/or color vision deficiency. The color maps
   are also perceptually-uniform, both in regular form and also when
   converted to black-and-white for printing.".  Source: [[https://cran.r-project.org/web/packages/viridis/vignettes/intro-to-viridis.html][CRAN vignette
   (2021)]]. Fact: ca. 4.5% or 350 million people in the world are
   colorblind ([[https://www.colorblindguide.com/post/colorblind-people-population-live-counter][Source]], 2021).

5) What are correlation heatmaps useful for?  Correlation heatmaps are
   designed to show relationships between pairs of continuous
   variables. They're compact so you can easily compare many variables
   at once. Higher correlation corresponds to brighter colors.[fn:2]

   #+attr_html: :width 400px
   #+caption: corr heatmap of customer satisfaction survey
   [[../img/heatmap.png]]

#+end_notes

** [[https://lyon.instructure.com/courses/568/assignments/2810/edit?quiz_lti][Test 4 review]]
#+attr_html: :width 500px
[[../img/balloons.jpg]]

1) What do you need to run R code blocks in Emacs?
   #+begin_notes
   - Org-mode file (.org)
   - ESS package
   - R session (console)
   #+end_notes

2) Which command lists all packages loaded in your current R session?
   #+begin_src R
     search() # find all loaded packages
     library(MASS) # load MASS and run again
     search()
   #+end_src

   #+RESULTS:
   :  [1] ".GlobalEnv"        "ESSR"              "package:stats"
   :  [4] "package:graphics"  "package:grDevices" "package:utils"
   :  [7] "package:datasets"  "package:methods"   "Autoloads"
   : [10] "package:base"
   :  [1] ".GlobalEnv"        "package:MASS"      "ESSR"
   :  [4] "package:stats"     "package:graphics"  "package:grDevices"
   :  [7] "package:utils"     "package:datasets"  "package:methods"
   : [10] "Autoloads"         "package:base"

3) Why is "changing line type" not a scatterplot customization?

4) What does a box plot visualize (best, and not what can it work with)?

   #+begin_src R :session :results graphics file :file ../img/box_mtcars.png
     boxplot(mtcars) # boxplot is generic and will digest data frames but
                                             # it won't be interesting or revealing in any way
   #+end_src

   #+begin_src R :session :results graphics file :file ../img/box_tg.png
     boxplot(ToothGrowth) # depends on the data frame though: ToothGrowth
                                             # has got only one numeric variable
   #+end_src

   #+begin_src R :session :results graphics file :file ../img/box_tg1.png
     boxplot(ToothGrowth$len ~ ToothGrowth$supp) # this works!
   #+end_src

5) What's the problem with 3-dimensional plots (of any kind)?

6) What's HCL?
   #+begin_notes
   HCL = Hue-Chroma-Luminence, colorspaces:
   - hue: color of the rainbow
   - chroma: color intensity
   - luminence: color brightness
     [[../img/color.png]]
   #+end_notes

7) What do ~intersect(x,y)~ and ~setdiff(x,y)~ do for vectors ~x~, ~y~?
   #+begin_src R
     x <- c(1,2,3,4,6)
     y <- c(1,2,3,4,5)
     intersect(x,y)
     intersect(y,x) # this function is symmetric
     setdiff(x,y) # values in x that aren't in y
     setdiff(y,x) # values in y that aren't in x
   #+end_src

   #+RESULTS:
   : [1] 1 2 3 4
   : [1] 1 2 3 4
   : [1] 6
   : [1] 5

** Lecture on graphics/systems in R
#+ATTR_HTML: :width 500px
[[../img/3_matisse.png]]
* Week 6: The ~plot~ function
#+attr_html: :width 600px
[[../img/plot1.png]]

- [X] Optional plot parameters
- [X] New course is hybrid DataCamp/Org-mode
- [X] Adding details to scatterplots
- [X] 2nd sprint review - tips and hints
- [X] New DataCamp hybrid assignment

** Featured data stories from [[https://github.com/birkenkrahe/dviz/issues][GitHub issues]]

- INFOGRAPHIC OF THE HISTORY OF LANGUAGES
  #+attr_html: :width 400px
  [[../img/languages.png]]
  #+begin_quote
  "The tree illustrates the ancient linguistic links between the
  world’s languages. Trees and branches are often used by linguists
  as a visual metaphor to explain language origination. This tree
  model explains the connections between groups of languages, which
  all descend from a common ancestral proto-language."
  #+end_quote

- THE COMPUTER SCIENTIST WHO CAN'T STOP TELLING STORIES
  #+attr_html: :width 400px
  [[../img/knuth.jpg]]
  #+begin_quote
  "Knuth’s interest in storytelling also led him to develop a
  philosophy of *[[http://www.literateprogramming.com/][literate programming]]* — a method for writing computer
  programs as literary essays. A literate program intersperses source
  code with elegant prose written in a familiar language, such as
  English. The source code delivers functionality and efficiency,
  while the exposition addresses a human reader, rather than the
  computer’s compiler. Anyone who later updates or debugs a literate
  program will avoid the often time-consuming and costly problem of
  trying to understand the original programmer’s algorithms, design
  decisions and implementation strategies. Knuth is a computer
  scientist who understands that words matter."
  #+end_quote

** Base graphics parameters
#+attr_html: :width 500px
[[../img/par.png]]

*Review questions:*

1) Which function controls graphic parameters in base R?

2) How can you create a panel of two plots on top of one another?

   #+begin_example R
     par(mfrow=c(2,1))
   #+end_example

3) How can you turn a scatterplot into a line plot?

   #+begin_example R
     plot(x,y, type="l") # x and y are coordinate vectors
   #+end_example

** Assignment: a quick introduction to base R graphics
#+attr_html: :width 500px
[[../img/dc_pearson1.png]]

- I have taken the lesson from DataCamp and souped it up a bit
- Assignment requires some skill and independence
- Complete this assignment by October 7 at 3 pm
- Upload the completed Org-mode file [[https://lyon.instructure.com/courses/571/assignments/1655][to Canvas]]
** About the 2nd sprint review
#+attr_html: :width 600px
[[../img/scrum.png]]

- *Read* my comments carefully and respond to them
- *Distinguish* your projects if your topic spans > 1 course
- *Complete* your literature review to identify methods
- *Highlight* your method(s) (how you want to do it)
- *Ask* questions for customer/teams
- *Read* the FAQ »[[https://github.com/birkenkrahe/org/blob/master/FAQ.org#what-should-we-do-in-the-second-sprint][What should we do in the 2nd sprint]]«
- *Read* the FAQ »[[https://github.com/birkenkrahe/org/blob/master/FAQ.org#how-do-you-report-on-and-plan-a-research-method][How do you report on and plan a research “method”?]]«
- *Submit* a text file or a PowerPoint presentation
- *Meet* the deadline or lose all points

- *What is special about a "data visualization" project?*
  1) Emphasis on visualization of data
  2) Emphasis on storytelling with data
  3) Emphasis on insights from data

- If you don't know what all this means - ASK ME!
** Adding details to plots
#+attr_html: :width 500px

[[../img/details.jpg]]

The basis of this section is [[https://github.com/birkenkrahe/dviz/blob/piHome/org/4_plot.org][this lecture on GitHub]].

* Week 7-8: Adding details to base R plots
#+attr_html: :width 600px
[[../img/4_details.png]]

- [X] Added [[https://github.com/birkenkrahe/dviz/blob/piHome/org/3_graphics.org#grid-graphics-example][grid package example]] to lecture
- [X] Adding details to plots
- [ ] Lab session with ~plot~

** DONE Review test 6: base R parameters and ~plot~

*ALL OF THESE QUESTIONS ARE DERIVED FROM TEST 6. TRY TO ANSWER THEM.*

1) [X] Which function controls graphic parameters for plots in R?

   #+begin_src R
     par()
   #+end_src

   #+RESULTS:
   #+begin_example
   $xlog
   [1] FALSE

   $ylog
   [1] FALSE

   $adj
   [1] 0.5

   $ann
   [1] TRUE

   $ask
   [1] FALSE

   $bg
   [1] "transparent"

   $bty
   [1] "o"

   $cex
   [1] 1

   $cex.axis
   [1] 1

   $cex.lab
   [1] 1

   $cex.main
   [1] 1.2

   $cex.sub
   [1] 1

   $cin
   [1] 0.15 0.20

   $col
   [1] "black"

   $col.axis
   [1] "black"

   $col.lab
   [1] "black"

   $col.main
   [1] "black"

   $col.sub
   [1] "black"

   $cra
   [1] 14.4 19.2

   $crt
   [1] 0

   $csi
   [1] 0.2

   $cxy
   [1] 0.02604167 0.03875970

   $din
   [1] 6.999999 6.999999

   $err
   [1] 0

   $family
   [1] ""

   $fg
   [1] "black"

   $fig
   [1] 0 1 0 1

   $fin
   [1] 6.999999 6.999999

   $font
   [1] 1

   $font.axis
   [1] 1

   $font.lab
   [1] 1

   $font.main
   [1] 2

   $font.sub
   [1] 1

   $lab
   [1] 5 5 7

   $las
   [1] 0

   $lend
   [1] "round"

   $lheight
   [1] 1

   $ljoin
   [1] "round"

   $lmitre
   [1] 10

   $lty
   [1] "solid"

   $lwd
   [1] 1

   $mai
   [1] 1.02 0.82 0.82 0.42

   $mar
   [1] 5.1 4.1 4.1 2.1

   $mex
   [1] 1

   $mfcol
   [1] 1 1

   $mfg
   [1] 1 1 1 1

   $mfrow
   [1] 1 1

   $mgp
   [1] 3 1 0

   $mkh
   [1] 0.001

   $new
   [1] FALSE

   $oma
   [1] 0 0 0 0

   $omd
   [1] 0 1 0 1

   $omi
   [1] 0 0 0 0

   $page
   [1] TRUE

   $pch
   [1] 1

   $pin
   [1] 5.759999 5.159999

   $plt
   [1] 0.1171429 0.9400000 0.1457143 0.8828571

   $ps
   [1] 12

   $pty
   [1] "m"

   $smo
   [1] 1

   $srt
   [1] 0

   $tck
   [1] NA

   $tcl
   [1] -0.5

   $usr
   [1] 0 1 0 1

   $xaxp
   [1] 0 1 5

   $xaxs
   [1] "r"

   $xaxt
   [1] "s"

   $xpd
   [1] FALSE

   $yaxp
   [1] 0 1 5

   $yaxs
   [1] "r"

   $yaxt
   [1] "s"

   $ylbias
   [1] 0.2
   #+end_example

2) [X] How can you create a panel of four plots?
   #+begin_src R :results silent
     par(mfrow=c(1,2))
   #+end_src

3) [X] How do you turn a scatterplot ~plot(x,y)~ into a line plot?

4) [X] Can every scatterplot be turned into a meaningful line plot?
   #+begin_src R :results graphics file :file ../q61.png
     par(mfrow=c(1,2))
     plot(wt ~ mpg, data=mtcars, type="l")
     plot(sort(wt) ~ sort(mpg), data=mtcars, type="l")
   #+end_src

   #+RESULTS:
   [[file:../q61.png]]

5) [X] What's the most important deliverable of your 2nd sprint review?
   #+begin_quote
   It's the "method" = e.g. how to make graphs, and where to get the
   data from; has anyone else done this? How have they done.
   #+end_quote

6) [X] What do you get when plotting factor levels with ~plot~?
   #+begin_src R :results graphics file :file ../q62.png
     par(mfrow=c(1,1))
     plot(ToothGrowth$supp)
   #+end_src

   #+RESULTS:
   [[file:../q62.png]]

7) [X] What's the difference between ~plot(Nile, type="l")~ and ~plot(Nile)~?
   #+begin_src R :results graphics file :file ../q63.png
     par(mfrow=c(2,1))
     plot(Nile, type="l")
     plot(Nile)
   #+end_src

   #+RESULTS:
   [[file:../q63.png]]

8) [X] When could you consider using ggplot2 instead of base R?
   #+begin_quote
   When presenting explanatory analysis results.

   Personally, I would not use it because I find it too convoluted and
   difficult to learn and use, and I don't buy its supposed
   advantages.
   #+end_quote

9) [X] What are the default values of ~mfrow~ and ~col~?
   #+begin_src R
     par()$mfrow
     par()$col
   #+end_src

   #+RESULTS:
   : [1] 1 1
   : [1] "black"

10) [X]  ~y~ is a vector of 10 random numbers. What's the difference between
    ~which( y > 0)~ and ~(y > 0)~ ?
    #+begin_src R
      y <- rnorm(10)
      y
      which(y > 0)  # index vector
      y>0  # logical vector
    #+end_src

    #+RESULTS:
    :  [1] -1.11897969  1.17464217 -0.00636334 -0.91818024  1.39170887 -0.68876140
    :  [7] -0.38443247  1.98342666 -0.15331524 -0.73694384
    : [1] 2 5 8
    :  [1] FALSE  TRUE FALSE FALSE  TRUE FALSE FALSE  TRUE FALSE FALSE

11) What is the difference between ~y[y>0]~ and ~y[which(y>0)]~?
    #+begin_src R
      y <- rnorm(10)
      y>0
      y[y>0]
      which(y > 0)
      y[which(y>0)]
    #+end_src

    #+RESULTS:
    :  [1]  TRUE FALSE FALSE FALSE FALSE  TRUE FALSE  TRUE  TRUE FALSE
    : [1] 0.9706462 0.7562431 0.1276132 1.1852212
    : [1] 1 6 8 9
    : [1] 0.9706462 0.7562431 0.1276132 1.1852212

** DONE Adding details to plots (cont'd)
#+attr_html: :width 500px

[[../img/details.jpg]]

- The basis of this section is [[https://github.com/birkenkrahe/dviz/blob/piHome/org/4_plot.org][this lecture on GitHub]]
- The customized file so far: [[https://tinyurl.com/mrx3txen][tinyurl.com/mrx3txen]]
- Submit completed practice file [[https://lyon.instructure.com/courses/571/assignments/2990][to Canvas]]

** TODO Practice: adding details to ~plot~
#+attr_html: :width 400px
[[../img/3_gnome.jpg]]

1) *Scatterplot customization summary:*

   - Plot dataframe ~df~ as multi-variable array with ~plot(df)~

   - Plot same length vectors x,y as ~plot(x,y)~ or ~plot(y ~ x)~

   - To split data sets, use e.g. ~index <- which(y>0)~ and call
     ~points(x[index],y[index])~ for points with ~y>0~

   - Add points with ~y<0~ with ~points(x[-index],y[-index])~

   - Add labels and title with ~xlab~, ~ylab~ and ~main~

   - Change default parameters ~pch~, ~cex~ inside the function calls

2) *Download practice file [[https://github.com/birkenkrahe/dviz/blob/piHome/org/4_plots_practice.org][from GitHub]]:* tinyurl.com/2p9h2azp

3) *Download data set [[https://raw.githubusercontent.com/birkenkrahe/dviz/piHome/data/dataset.csv][from GitHub]]:* tinyurl.com/spdnvxbr

4) *Upload the completed practice file to Canvas (practice 5)*

** TODO Project Update - 2nd sprint
#+attr_html: :width 500px
[[../img/scrum.jpg]]

*Let's hear from a few teams:*
- How will your final deliverable look like?
- What're you going to do in the NEXT sprint?
- What're your sources?
- What's are you most looking forward to in this project?

** TODO What did you learn so far?
#+attr_html: :width 500px
[[../img/goal.jpg]]

*What did you learnt in the first 1/2 of the term?*

*What's on your list?*
#+begin_src R :results output graphics file :file ../img/midterm.png
  learning <-
    factor(
      c(
        "scatterplot",
        "customizing",
        "points",
        "title"))
  plot(learning)
#+end_src

#+RESULTS:
[[file:../img/midterm.png]]

Here's my list: 3 x infrastructure + 7 x content
#+begin_quote
1) /Basic agile project management process (with Scrum)/
2) /Principles and practice of [[http://www.literateprogramming.com/][Literate Programming]]/
3) /Introduction to GNU Emacs + ESS + Org-mode infrastructure/
4) The character and importance of meta data
5) Problems with missing values, variable definitions, data quality
6) EDA workflow and complete example
7) Exploratory vs. explanatory data visualization
8) Graphics devices and four different graphics packages in R
9) Bar charts, box plots, line plots, scatterplots, and linear models
10) Plot customization and graphical parameters
#+end_quote

* Week 9: Layout, symbols and plot arrays
#+attr_html: :width 500px
[[../img/week8.jpg]]

- [X] Checking in: 2nd sprint review
- [X] Review home assignment "[[https://lyon.instructure.com/courses/571/assignments/1655][Quick introduction to base graphics]]"
- [X] Lyon College Career Expo 2022
- [ ] Next home assignment: different plot types
- [ ] Scatterplot customization part II: trendline, text and legend
- [ ] Lecture: Barplot summaries, ~symbols~, ~layout~, multiple plot arrays

** Checking in: 2nd sprint review
#+attr_html: :width 500px
[[../img/sprint2.jpg]]

- Main issues with almost all submissions: no attempt at
  *visualization*, few customer *questions*, no *references*
- You need to validate your approach using other people's work:
  especially in data visualization, you can learn a lot from that!
- Does anybody have questions or comments on the sprint reviews?
- The next sprint review will be at the end of October - focus is on
  "results", and you will be required to give a short presentation

** Review: assignment "Quick intro to base graphics"

*Finish this exercise!*
- Explanatory vs. exploratory plots
- Plot is a generic function (feeding it with a ~factor~)
- Plot customization with point shapes, color, reference lines
- Creating multiple plot arrays with log transformations
- Pie chart creation and comparison with bar chart
- You find the solution [[https://github.com/birkenkrahe/dviz/blob/piHome/pdf/3_graphics_practice.pdf][as a PDF in GitHub]]
- You can still submit this until Monday 10 October 3 pm for 50% of
  the points

** Lyon College Career Expo
#+attr_html: :width 300px
[[../img/recruit.jpg]]

- See announcement in Canvas!

- The ability to visualize data as taught in the Lyon program (along
  the entire data science pipeline) is a much sought-after skill in
  many organizations

- Bring back one or more good company stories for bonus points!

** Next home assignment: Single variable plots
#+attr_html: :width 400px
[[../img/geyser.png]]

- Three assignments based on three short video lessons

- Plotting single variables ([[https://lyon.instructure.com/courses/571/assignments/1656][Canvas]]):
  1. Histograms with ~hist~
  2. Density plots with ~density~
  3. QQ-plots with ~qqPlot~

- Plotting two variables:
  1. Sunflower plots with ~sunflowerplot~
  2. Bag plots with ~bagplot~
  3. Mosaic plots with ~mosaicplot~

- Showing more complex relations between variables:
  1. Boxplots with two numerical variables with ~bagplot~
  2. Correlation matrices with ~corrplot~
  3. Building and plotting ~rpart~ models

** Waterloo, Friday October 7, 2022
#+attr_html: :width 600px
#+caption: Napoleon in the battle of Waterloo 1815
[[../img/waterloo.png]]
#+begin_notes
This is the *second attempt!* I found out what the problem was last
Friday: GitHub serves "raw" pages with ~Cache-Control:
max-age=300~. That's specified in seconds, meaning the pages are
intended to be cached for 5 minutes. /Painting by Crofts (1847-1911)/
#+end_notes
** Scatterplot customization part II

Let's start over by (1) getting into Emacs in a different way, (2) by
downloading the data set straight from the web, and (3) by working in
pairs (help your neighbor when you're done or check if you're stuck).

- [X] Open the practice file [[https://raw.githubusercontent.com/birkenkrahe/dviz/piHome/org/plotpractice.org][from GitHub]] in your browser at
  [[https://tinyurl.com/86aychm3][tinyurl.com/86aychm3]] and save it (it will be saved as a ~.txt~ file)

- [X] Open an Org-mode file in Emacs for R code blocks to code along:
  on the (Windows) command line, enter ~emacs --file custom2.org~ to load
  the file into the 1st buffer (it'll be created if it doesn't exist).

- [X] In ~custom2.org~ insert the ~txt~ file you downloaded with ~C-x i~
  followed by the file name (type ~TAB~ to see available files)

- [X] Run *each* header line in ~custom2.org~ to activate it, then go to
  the first code block in the ~Getting the data~ section and run it to
  get the data set from the web via URL.
  #+attr_html: :width 400px
  [[../img/df.png]]

- [X] Run the block in ~Plotting the data~ to get the coordinate vectors
  ~x~ and ~y~:
  #+attr_html: :width 400px
  [[../img/coordinates.png]]

- [X] Collapse all headings with ~SHIFT-TAB~ (toggles)

- [X] Go to the heading ~Customize the plot~ and run the second (2) code
  block to generated the file ~final.png~
  #+attr_html: :width 400px
  [[../img/final.png]]

- [X] Save the file ~custom2.org~ with ~C-x C-s~

- [X] Complete the sections ~Add a trendline~, ~Add text for outliers~,
  and ~Add a legend~ using ~4_plot.org~ in GnitHub: [[https://tinyurl.com/5etspdyr][tinyurl.com/5etspdyr]]

- [X] Upload your completed Org-mode file in Canvas ([[https://lyon.instructure.com/courses/571/assignments/3201][Practice 6]])

- [X] Solutions will be available as PDF from Wednesday. Your final
  prototype should look like this:
  #+attr_html: :width 400px
  [[../img/legend.png]]

** Wed/Fri ~symbols~ and ~mfrow~ multi plot arrays
[[../img/multiple.png]]
* Week 10-11: ~layout~ matrix and ~color~ graphics
#+attr_html: :width 400px
[[../img/chile.jpg]]

- [X] Review assignment 7 (solutions in GitHub / [[https://lyon.instructure.com/courses/571/assignments/1656][Canvas]])
- [X] Learn how to print plots directly from code
- [X] Finish basic graphics (~mfrow~, ~layout~ and color)
- [X] @Home: complete test 7 (customizing base R plots / [[https://lyon.instructure.com/courses/571/assignments/3275/edit?quiz_lti][Canvas]])

** Article FYI: [[https://www.nature.com/articles/s41467-020-19160-7][the misuse of color in science publications]]
#+attr_html: :width 500px
#+caption: fig. 1 superiority of scientifically derived color maps
[[../img/colormap.png]]

#+begin_quote
»For the casual reader, it might appear curious that the community of
scientists, a group of people who are usually more critically
inclined, fail to condemn the proliferation among themselves of
rainbow and other, similarly unfit, colour maps.«
#+end_quote

Ref.Crameri, F., Shephard, G.E. & Heron, P.J. The misuse of colour in
science communication. Nat Commun 11, 5444
(2020). https://doi.org/10.1038/s41467-020-19160-7

** Review assignment 7. [[https://app.datacamp.com/learn/courses/data-visualization-in-r][Plots to characterize single variables]] ([[https://lyon.instructure.com/courses/571/assignments/1656][Canvas]])

- ~hist~ and ~truehist~ functions
- ~density~ estimates from histograms
- ~qqplot~ to test the Gaussian assumption

*=> Open any practice file with the necessary Org-mode header lines <=*

1) What do the data in these four plots have in common, and what is
   measured in each case?

   [[../img/single.png]]

   #+begin_quote
   - All data are contained in a single variable.
   - Scatterplot: x = index ("observation no."), y = value
   - Histogram: x = values in fixed bins, y = binned counts
   - Density estimate: x = values, y = smoothed counts
   - Normal QQ-plot: how Gaussian is the distribution?
   #+end_quote

2) In which way does ~truehist~ plot a "true" histogram?
   #+begin_quote
   In a regular histogram, the counts are displayed in absolute
   values. A true histogram converts the counts to proportions (part
   of 1 or 100%).
   #+end_quote
   #+begin_src R
     prop.table(c(1,1,2))
   #+end_src

   #+RESULTS:
   : [1] 0.25 0.25 0.50

   #+begin_src R :results graphics file :file ../img/true.png
     par(mfrow=c(1,2),pty='s')
     hist(Nile)
     library(MASS)
     truehist(Nile, prob=FALSE, main="True histogram of Nile")
   #+end_src

3) How would you look at a subset of the histogram? E.g. between the
   values 800 and 1000?
   #+begin_src R :results graphics file :file ../img/true1.png
     hist(Nile[Nile > 800 & Nile < 1000])
   #+end_src

4) What's the index vector for the last question?
   #+begin_src R
     index <- which(Nile > 800 & Nile < 1000)
     Nile[index]

     ## plotting to file without the help of Org-mode and Emacs
     png(file="../img/true2.png")  # opens graphics device
     hist(Nile[index])
     dev.off()  # closes last graphics device (returns its number)
   #+end_src

5) What does ~par(new=TRUE)~ do?
   #+begin_quote
   ~par()$new~ is "logical, defaulting to FALSE. If set to TRUE, the
   next high-level plotting command (actually ~plot.new~) should *not
   clean* the frame before drawing as if it were on a new device."
   #+end_quote

6) What is a QQ-plot good for?
   #+begin_quote
   1) The data are sorted and plotted against a special x-axis, in our    case stemming from the Gaussian distribution or bell curve.
   2) A Gaussian fit (comparison with the Gaussian distribution) is
      attempted.
   3) Outliers are highlighed using the index number of the resp. values
   #+end_quote
   #+begin_src R
     summary(ChickWeight$weight) # contains 5 quantiles or percentiles
   #+end_src

   #+RESULTS:
   :    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
   :    35.0    63.0   103.0   121.8   163.8   373.0

** Complete Test 7: [[https://lyon.instructure.com/courses/571/assignments/3275/edit?quiz_lti][customization base R plots]]
** [[https://r-charts.com/][R Charts examples: base R and ggplot2]]
** Advanced plotting
#+attr_html: :width 400px
[[../img/chile.jpg]]

What did you learn so far?
- Pie charts, how and why to avoid them with ~pie~
- Summaries for factor variables with ~barplot~
- Plots with more than two numeric variables with ~symbols~
- Graphic display setup with ~mfrow~

* Week 11: color graphics and big data plots
#+attr_html: :width 600px
[[../img/ggplot2.png]]

- [X] DataCamp assignment: introduction to ~ggplot2~ ([[https://lyon.instructure.com/courses/571/assignments/1667][Oct 31]])
- [X] Practice creating a plot array ~layout~ ([[https://tinyurl.com/yvnjkt42][tinyurl.com/yvnjkt42]])
- [ ] Prepare the 3rd sprint review with an "abstract" ([[https://lyon.instructure.com/courses/571/assignments/1691][Nov 2]])
- [ ] Using color graphics with examples
- [ ] Lab session with exercises for advanced customization
** 3rd sprint review - write an abstract

Complete this review and submit it [[https://lyon.instructure.com/courses/571/assignments/1691][in Canvas]] by Nov 2, 3 pm!

Here is an example from my current publication project - you're the
research participants!

An abstract should have no more than 250-300 words. My example has 350
words (with many references still missing) and could easily be pruned
to 300. [[https://github.com/birkenkrahe/org/blob/master/research/Abstract.org][The full abstract (work in progress) is here]].

1) "One or two sentences providing a basic *introduction* to the field,
   comprehensible to a scientist in any discipline."

   #+begin_quote
   Data science draws on computer science, statistics and domain
   knowledge. It is highly *interdisciplinary*, even more so than other
   related fields like business intelligence or artificial
   intelligence. This interdisciplinarity leads to its alleged
   'sexyness' (Davenport/Patil, 2012 and 2022) - it purports to be
   open to students from a wide variety of backgrounds - like biology
   or psychology, who are interested in widely different
   applications - like genome analysis or marketing predictions (???).
   #+end_quote

2) "Two or three sentences of more detailed *background*, comprehensive
   to scientists in related disciplines."

   #+begin_quote
   This versatility comes at a price: the beginner's learning path in
   data science is highly fragmented - it involves different
   programming languages, data visualization techniques, mathematical
   and process modeling, and knowledge of computing infrastructure
   (???).
   #+end_quote

3) "One sentence clearly stating the general *problem* being addressed
   by this particular study." (And how it was addressed.)

   #+begin_quote
   The problem is how to get enough of an overview of all of these
   aspects while learning about data science to solve real-world
   problems, especially for absolute beginners of data science
   (???). For this study, I have employed the (in computer science
   terms) ancient art of literate programming for instruction,
   interaction, and immersion in data science. To facilitate this
   triade of methods, the equally ancient text editor GNU Emacs with
   the ESS ('Emacs Speaks Statistics') and Org-mode plugins were used.
   #+end_quote

4) "Two or three sentences explaining what the main *result* reveals in
   direct comparison to what was thought to be the case previously, or
   how the main result adds to previous knowledge."

   #+begin_quote
   Data science teaching practice has focused on creating special
   tools like RStudio, a popular IDE for R, packages like the
   "Tidyverse", or online platforms like DataCamp to make learning
   data science (in this case via an R programming track) more
   palatable. Unfortunately, these parallel infrastructures achieve
   little when it comes to preparing students for the real world
   (???). The methodological attitude is well summarized by the "low
   code/no code" trend in IT (???).
   #+end_quote

5) "One or two sentences to put the results in a broader *context*."

   #+begin_quote
   We have used these methods for two consecutive terms across a
   spectrum of courses, with undergraduate students of varying
   seniority, background and interests at a small liberal arts
   college. The results were very encouraging, and contradict the
   current "no code/low code" trend in IT. In stark contrast, the
   study demonstrates that a "high road" approach mixing tools that
   are considered to be difficult but that deliver deep insights into
   both computing infrastructure and data processing, might be at
   least as successful if not more successful. Only followup studies
   can show if this hope will pan out.
   #+end_quote

** It's time to fake being a good programmer
#+attr_html: :width 500px
[[../img/fake.jpeg]]

- "The secret: it's not what you know, it's what you show."
- [[https://towardsdatascience.com/how-to-fake-being-a-good-programmer-cbef2c39764c][I thought this was funny:]] "First, you have *vim*, a highly
  configurable text editor so hard to use millions of developers
  have been inadvertently trapped in its claws, unable to figure out
  how to close the damn thing. The mere fact that you have the
  audacity to use it elevates your status among your colleagues. You
  seem downright mythical, illuminating others about subjects as
  historical as the holy Editor war and stirring up support for your
  crusade against the Church of Emacs."

** Lab session: advanced plot customization
#+attr_html: :width 600px
[[../img/advanced.png]]

- Download the practice file from here: [[https://tinyurl.com/bdd5adjn][tinyurl.com/bdd5adjn]]
- Complete the file and upload it in Canvas ([[https://lyon.instructure.com/courses/571/assignments/3556][Practice 7]])
- You can find the solutions in the [[https://github.com/birkenkrahe/dviz/tree/piHome/pdf][GitHub PDF]] repository

* Week 12: ~ggplot2~ review, EDA revisited
#+attr_html: :width 600px
#+caption: Image source: DataCamp
[[../img/exploreexplain.png]]

- [X] [[https://github.com/birkenkrahe/org/blob/master/FAQ.org#how-can-i-keep-my-knowledge-of-r-current][New FAQ: how can you keep your R knowledge current?]]
- [X] Review: ~ggplot2~ [DataCamp] - complete practice file in class:
  [[https://tinyurl.com/3ahbp8bt][tinyurl.com/3ahbp8bt]]
- [X] New assignment: data visualization in spreadsheets [DataCamp]
- [X] EDA: exploring new data sets - strategy and statistics

** ~ggplot2~ [[https://campus.datacamp.com/courses/introduction-to-data-visualization-with-ggplot2/][DataCamp chapter]] review
#+attr_html: :width 600px
[[../img/ggplot2github.png]]
([[https://github.com/tidyverse/ggplot2][Source: GitHub]])

- Download the review practice file: [[https://tinyurl.com/3ahbp8bt][tinyurl.com/3ahbp8bt]]
- Open the file in Emacs with ~--file ggplot.org~
- Upload the completed file to Canvas as [[https://lyon.instructure.com/courses/571/assignments/3583][practice 8]]

** Updating your version of R and your packages

- On your own PC update R if you can ([[https://github.com/birkenkrahe/org/blob/master/FAQ.org#how-can-i-update-r-on-my-computer][FAQ]]) w/admin rights only
- On the Lyon PCs update your packages with ~update.packages()~
- Updating R with the ~installr~ packages will copy and update all your
  upgradable packages in one go (upon request)
- Afterwards you have to update your Windows ~PATH~

** EDA: Exploring new data sets
#+attr_html: :width 600px
[[../img/age-of-exploration-image.jpg]]

- Data-centric vs. model-centric approach ([[https://fortune.com/2022/06/21/andrew-ng-data-centric-ai/][Ng, 2022]]): conversation
  with Stone Ward yesterday on "multivariate time series analysis":

  /'The client wants to know how the price of Oreos affects his sales.'/

  #+begin_quote
  »The real differentiator between businesses that are successful at
  A.I. and those that aren’t, Ng argues, is down to data: What data is
  used to train the algorithm, how it is gathered and processed, and
  how it is governed? *Data-centric* A.I., Ng tells me, is the practice
  of “smartsizing” data so that a successful A.I. system can be built
  using the least amount of data possible.«
  #+end_quote

* Week 13: RStudio, Web apps with R Shiny
#+attr_html: :width 600px
[[../img/shiny.png]]

- [X] New test available [[https://lyon.instructure.com/courses/571/assignments/3570?display=full_width][in Canvas]] - do it!
- [X] R ~shiny~ review [DataCamp] - deadline Wed 9 Nov
- [X] Reminder: final presentations in 3 weeks!
- [X] RStudio demo and practice (using rstudio.cloud)
- [X] Rendering HTML pages from Emacs Org-mode files
- [ ] Easter egg: what do the paintings have in common?
  - Goya, The Clothed Maja
  - Da Vinci, The Last Supper
  - van Gogh, Sunflowers
  - Botticelli, La Primavera

** EDA: Summarizing numerical data (Notebook demo)
#+attr_html: :width 500px
[[../img/workspace.png]]
(Image: DataCamp workspace - R + SQL integration)

- Using the RStudio demo ([[https://youtu.be/MtiGnSZGSQs][YouTube]]) with ~HollywoodMovies2011~ from the
  ~Lock5withR~ package

#+attr_html: :width 500px#+attr_html: :width 500px
[[../img/rstudio.png]]
(Image: RStudio IDE with R console and R notebook)

- *RStudio IDE* overview (more at posit.co - rebranded company)
  1) RStudio looks much like the DataCamp lesson dashboard
  2) Significant time investment especially for documentation
  3) Well known among some R developers and package builders
  4) Non-extensible compared to Emacs + ESS + Org-mode
  5) Other choices: [[https://colab.to/r][Google Colaboratory]], [[https://www.datacamp.com/workspace][DataCamp workspace]], [[https://www.kaggle.com/code][Kaggle]]

#+attr_html: :width 500px
[[../img/kaggle.png]]
(Image: Kaggle code dashboard with project samples)

- *Practice:*
  1) Open rstudio.cloud in a browser
  2) Choose "Get started for free"
  3) Sign up using Google (@lyon.edu)
  4) Look at ~Primers > Visualize Data > Bar Charts~
  5) Create new project (name it ~Rstudio Demo~)
  6) Open RStudio
     - Create new R Markdown file
     - Run template code chunk
     - Knit markdown file and view HTML output
  7) In the R console
     - Install ~Lock5withR~ package
     - Load ~Lock5withR~ package
     - Load ~HollywoodMovies2011~ data frame
     - Check environment
     - Check package information
     - Look up ~help(mean)~
     - Check the R version with ~version~
  8) In Markdown file
     - Create safe copy ~movies~ in markdown file
     - Compute statistical summary for data frame
     - Compute summary for ~Rottentomatoes~ feature
     - Compute mean for ~Rottentomatoes~ feature with/without ~NA~
     - Knit markdown file and view HTML output
  9) Change to ~Terminal~ and check shell with ~echo $SHELL~
  10) Check the settings (cog button top right): which OS?

  #+attr_html: :width 500px
  [[../img/emacsorg.png]]
  (Image: Buffers in the fully extensible Emacs editor)

** Rendering HTML pages from Emacs Org-mode

1) Open one of your practice files (preferably with images) in Emacs
2) In the ~#+PROPERTY~ header, add the parameter ~:exports both~
3) Enter ~C-c C-e~ - this opens the ~Org Export Dispatcher~ dashboard
4) Enter ~h o RET~ to render the file in a browser
5) You can also export to WORD (OpenOffice), PDF, LaTeX etc.

** Comments: 3rd sprint review (abstract/results)
#+attr_html: :width 400px
[[../img/nanny.png]]

Are you comfy?

- Which visualization are you visualizing for the final presentation
  right now?

- How happy are you with what you learnt in this course for your
  project, and what else would you like to know in order to improve
  your project?

- Final presentations: we need to extend the session time, alas

** Review R Shiny
#+attr_html: :width 400px
[[../img/shinyapp.jpg]]

1) Download the review file from: [[https://tinyurl.com/yaan4dwk][tinyurl.com/yaan4dwk]]
2) Open it in GNU Emacs as an Org-mode file ~shiny.org~
3) Cover cnceptual review questions on R Shiny
4) Building a hello world app with R Shiny
5) Building a simple input/output app with R Shiny
6) Building a simple histogram app with R Shiny

More examples on hosting R Shiny apps locally at [[https://hosting.analythium.io/run-shiny-apps-locally/][analythium.io]]

* Week 14: Data visualization with Tableau
#+attr_html: :width 500px
[[../img/tableau.png]]

- [ ] Presenting Org-mode files
- [ ] Save/load/run summary function
- [ ] DataCamp review: Tableau
- [ ] Working with external data: file management

** Presenting in Emacs: [[https://github.com/birkenkrahe/org/blob/master/FAQ.org#how-can-i-present-in-emacs][new FAQ]]
#+attr_html: :width 250px
[[../img/paratrooper.png]]

- Demo file ~present-demo.org~
- [[https://github.com/birkenkrahe/org/blob/master/emacs/present_demo.org][GitHub]] - [[https://raw.githubusercontent.com/birkenkrahe/org/master/emacs/present_demo.org][raw Org-mode file]]: [[https://tinyurl.com/556k452p][tinyurl.com/556k452p]]
- Show: speaker notes / themes (moon, serif)
- Extensive documentation on GitHub ([[reveal.js)][org-reveal]])

** Save/load/run ~BasicSummary~ on different datasets
#+attr_html: :width 600px
[[../img/eastwest.jpg]]

- Image: East Berlin before and after the wall fell
- Though probably taken in the 1950s, most of East Berlin looked like
  this all the way up to 2003 when I moved there
- Communism vs. beauty: "[[https://intellectualtakeout.org/2021/07/beauty-and-the-brutalist-the-architectural-effect-on-our-souls/][Beauty and the brutalist: the architectural
  effect on our souls.]]" - this is what I was talking about
  (Holmquist, 2021)

** Working with external data
#+attr_html: :width 400px
[[../img/rsqlite.png]]

- [X] File and shell management: ~shell~, ~dir.create~, ~getwd~, ~setwd~
- [X] Manual data entry (~fix~)
- [X] CSV and other file types (~read.csv~)
- [X] Data on the Internet (~download.file~, ~browseURL~)
- [X] Data in relational databases (~sqldf~, ~RSQLite~)
** Internet text mining example
#+attr_html: :width 400px
[[../img/penguin.jpg]]

- "I cleaned today's Internet / web scraping example up and put it in
  a short file of its own: ~9_internet.org~ Links to an external site.-
  you can download this (raw) Org-mode file and run the code blocks in
  Emacs. Most of this already worked in class but with this code you
  can also complete the last step and see the data frame that belongs
  to the web data. Enjoy!"

- Get the updated file from here: [[https://tinyurl.com/cfwhayya][tinyurl.com/cfwhayya]]

** Tableau review [DataCamp]
#+attr_html: :width 400px
[[../img/book.jpg]]

1) What's Tableau for?
   #+begin_quote
   1) "Click, drag, drop" (no-code) Data visualization
   2) Access to data analysis tool
   3) Dashboard building
   #+end_quote

2) Is Tableau useful to get a job as an analyst or developer?
   #+begin_quote
   Yes - [[https://www.google.com/search?q=jobs+tableau&rlz=1C1GCEB_enUS965US965&oq=jobs+tableau&aqs=chrome..69i57j0i512l2j0i22i30l7.3590j0j7&sourceid=chrome&ie=UTF-8&ibp=htl;jobs&sa=X&ved=2ahUKEwjd7fn7hbb7AhUmkokEHZ0vAwQQutcGKAF6BAgcEAY#htivrt=jobs&htidocid=l_oXSMqFK6QAAAAAAAAAAA%3D%3D&fpstate=tldetail][see search here]] - most ads are looking for experience but
   often SQL may be enough to get a junior position. Many remote
   opportunities.
   #+end_quote

3) Is there a free version of this commercial tool? Did you check it
   out?
   #+begin_quote
   #+attr_html: :width 400px
   [[../img/tableau.png]]

   Yes there is - Tableau Public is a free, cloud-based, you can
   connect to Excel/CSV files, for up to 15 mio rows of data. Link:
   [[https://public.tableau.com/app/discover][public.tableau.com/]]
   #+end_quote

4) How much does Tableau actually cost? Is this a lot compared to other
   analytical dashboard apps (e.g. Microsoft's PowerBI)? Who owns
   Tableau?
   #+begin_quote
   #+attr_html: :width 400px
   [[../img/tableau_pricing.png]]

   #+attr_html: :width 400px
   [[../img/powerbi_pricing.png]]

   - Tableau is owned by Salesforce who are known for their CRM
     software.
   - Other BI software platforms like [[https://www.grow.com/product/grow-integrations][grow.com]] or [[https://count.co/][count.co]] come with
     "connectors" (to databases, other systems, like Salesforce,
     Shopify etc.)
   #+end_quote

5) Did you register for Tableau public? Did you check the "Available
   for Hire" field in the profile?
   #+begin_quote
   #+attr_html: :width 400px
   [[../img/tableau_public.png]]

   See also: [[https://www.tableau.com/blog/beginners-guide-tableau-public][A Beginner's Guide to Tableau Public]] with tips on "how to
   build a strong profile page". Find and follow me
   #+attr_html: :width 250px
   [[../img/tableau_follow.png]]
   #+end_quote

6) Did you download the workbooks from the course page? You can find
   them [[https://public.tableau.com/app/profile/datacamp.introduction.to.tableau#!/][on Tableau public]]
   #+begin_quote
   #+attr_html: :width 400px
   [[../img/tableau_datacamp.png]]
   #+end_quote

7) How are different data types indicated in Tableau?
   #+begin_quote
   - *Green fields* are numeric-continuous fields, treated as an
     infinite range. Examples are the number of reviews per month,
     room price, or the longitude of the location.
   - *Blue fields* are discrete, or categorical fields, which means they
     have individually separate and distinct values. Examples include
     room type, neighborhood, and the ID number of the listing.
   #+end_quote

8) How do quantitative "dimensions" and qualitative "measures" affect
   visualizations?
   #+begin_quote
   #+attr_html: :width 500px
   [[../img/tableau_dimensions_measures.png]]
   #+end_quote

9) How can you get the number of reviews per neighborhood for listings
   below $200 from the ~new_york.csv~ AirBnB dataset - in Tableau?
   #+begin_quote
   1) Choose ~Data > New data source~ at the top and select ~new_york.csv~
   2) Click on the ~sheet~ tab (bottom) to open the spreadsheet
   3) Drag the ~neighborhood~ variable into the ~sheet > rows~ field at top
   4) Drag the ~number of reviews~ variable into the ~Marks > Text~ field
   5) Drag ~price~ variable into the ~Filters~ field
   6) Select ~All values > Range of values > Maximum = 200~
   #+end_quote

10) To make inquiries like these in R, use ~sqldf~, which allows you to
    query data frames with SQL commands (this is what Tableau does).

Additional resources ([[https://lyon.instructure.com/courses/571/discussion_topics/1294][see Canvas announcement]]):
- [[https://www.datacamp.com/tutorial/creating-stories-tableau][Creating stories in Tableau]] (aka [[http://www.literateprogramming.com/][literate programming]])
- How to build engaging dashboards ([[https://drive.google.com/file/d/18ISvLVzA5nNjNUExkqd5_CxH0wfpUY-k/view?usp=share_link][whitepaper]] and [[https://www.datasciencecentral.com/dsc-webinar-seriesmaking-flow-happen-dashboards-that-persuade-inform-and-engage-10-29-2013/][video]])
- Tableau courses [[https://app.datacamp.com/search/?q=tableau&type=course][at DataCamp]] (limited access - 6 months)
  - [[https://app.datacamp.com/learn/courses/introduction-to-tableau][Introduction to Tableau]]
  - [[https://app.datacamp.com/learn/courses/analyzing-data-in-tableau][Analyzing data with Tableau]]
  - [[https://app.datacamp.com/learn/courses/creating-dashboards-in-tableau][Creating dashboards in Tableau]]
  - [[https://app.datacamp.com/learn/courses/calculations-in-tableau][Calculations with Tableau]]
  - [[https://app.datacamp.com/learn/courses/connecting-data-in-tableau][Connecting data with Tableau]]
  - [[https://app.datacamp.com/learn/courses/statistical-techniques-in-tableau][Statistical techniques in Tableau]]
  - [[https://app.datacamp.com/learn/courses/data-visualization-in-tableau][Data visualization in Tableau]]
  - Tableau case studies: [[https://app.datacamp.com/learn/courses/case-study-analyzing-customer-churn-in-tableau][customer churn]], [[https://app.datacamp.com/learn/courses/case-study-analyzing-job-market-data-in-tableau][job market data analysis]]

** R and relational databases
#+attr_html: :width 400px
[[../img/query.jpg]]

- Very brief introduction to relational db and SQL
- Database support in R with ~sqldf~ and ~RSQLite~
- Examples querying dataframes and databases
- Download and open in Emacs: [[https://tinyurl.com/2p8e6se5][tinyurl.com/2p8e6se5]]

* Week 15: Exam prep, spreadsheets & evaluation
#+attr_html: :width 500px
[[../img/sheets.jpg]]

- [ ] Course evaluation now! Bonus points! Canvas: ~Course Eval~
- [ ] Last [DataCamp] assignment / submit missing in-class assignments
- [ ] Final presentations: Nov 28, Nov 30, Dec 2 (3 pm)
- [ ] Test driving the final exam
  
* TODO Course evaluation now! Hit me! Hard!
#+attr_html: :width 300px
[[../img/eval.png]]

- *If you'd like for me to stick around, please evaluate (fairly) now*
- *Extra credit for completing this in class today (send proof)!*
- *A couple of examples of useful feedback for me from past surveys:*
#+attr_html: :width 700px
[[../img/eval1.png]]
* DONE Easter egg - solution

I asked what these pieces of art have in common:
- Goya, The Clothed Maja (Madrid)
- Da Vinci, The Last Supper (Milan)
- van Gogh, Sunflowers (Louvre)
- Botticelli, La Primavera (Florence)

Kim Ho identified the commonality! Well done!

#+begin_quotes
The answer: these works of art have all been attacked in 2022 by
climate activists from the [[https://www.last-generation.org/]["Last Generation]]" group. This group attacks
public art with mashed potatoes, black paint, tomato soup etc. and the
attackers glue themselves to the wall shouting slogans until they are
taken away. Two more have been added to the list in the last 2 weeks:
- Klimt, Death and Life (Austria)
- Monet, Les Meules (Berlin)
#+end_quotes

* TODO Data Visualization in Spreadsheets [DC]
#+attr_html: :width 480px
[[../img/dashboard2.png]]

- Last DataCamp assignment & last assignment overall
- Don't forget to submit missing practice sheets

* TODO Projects: 4th and final sprint review
#+attr_html: :width 500px
[[../img/presentation.png]]

- FAQ: [[https://github.com/birkenkrahe/org/blob/master/FAQ.org#what-should-we-do-in-the-fourth-sprint][What should you do in the 4th and final sprint review?]]

- FAQ: [[https://github.com/birkenkrahe/org/blob/master/FAQ.org#how-should-we-prepare-for-the-final-presentation][How should we prepare for the final presentation?]]
  1) go through the *checklist*
  2) act *strategically*
  3) *show* me your presentation beforehand if in doubt
  4) *rehearse* under real conditions (in the class room if you can)

- *Upload* [[https://github.com/birkenkrahe/org/blob/master/FAQ.org#what-do-we-have-to-deliver-for-the-final-essay-or-presentation][some material]] online (see email later this week)

- *Timing*: enter your time/names/titles [[https://lyon.instructure.com/courses/571/pages/register-your-final-presentation-date-here][in Canvas]] 

* TODO Test driving the final exam (Dec 5-7)
#+attr_html: :width 500px
[[../img/ghost.png]]

*Selection of quiz questions (__/115) from the final exam (40/115)*

1) How can you run SQL queries on an R dataframe?
   #+begin_src R
     library(sqldf)
     ## query on data frame 'mtcars' returns dataframe
     query <- sqldf("SELECT * FROM mtcars LIMIT 6")
     query
     class(query)
   #+end_src

   Similar (not identical) to ~head~:
   #+begin_src R
     head(mtcars)
     mt <- mtcars
     rownames(mt) <- NULL
     head(mt)
   #+end_src

2) What does "literate programming" stand for?
   #+begin_notes
   - A programming paradigm: doc + code + output = story
   - A programming methodology to improve program readability
   - A method introduced by Don Knuth in 1984 using "cweb"
   - Basis of interactive data science notebooks (Jupyter, Org-mode)
   #+end_notes

3) What does the "Git" in "GitHub" stand for?

4) What's the output of ~plot(factor)~?
   #+begin_src R :results graphics file :file ../img/test.png
     ## bar chart with one bar per factor level
     plot(x=ToothGrowth$supp)
   #+end_src

5) How can you turn a scatterplot into a line plot - in base R? In
   ggplot2?
   #+begin_src R :results graphics file :file ../img/test.png
     plot(Nile, type="p") # for line plot: p -> l 
   #+end_src
   ggplot2:
   #+begin_src R :results graphics file :file ../img/ggtest.png
     library(ggplot2)
     ggplot(data=data.frame(Nile))+
       geom_line(aes(x=time(Nile),y=Nile))
   #+end_src

6) What does the ~grid~ function do?
   #+begin_src R :results graphics file :file ../img/test.png
     par(mfrow=c(2,1))
     plot(Nile)
     plot(Nile)
     grid()
   #+end_src
   
7) How can you check if a graphics function in R is /generic/? And what
   does this actually mean?
   #+begin_src R
     methods(plot)
     methods(legend)
   #+end_src
   
8) What's a /plot array/, what is it good for, and do you have an example?
   #+begin_src R :results graphics file :file ../img/test.png
     ## plot array of 'iris' for exploration of the data frame
     ## a plot array is a panel of pairwise scatterplots
     plot(iris, col=iris$Species)
   #+end_src
   
9) Which ways are effective to represent > 2 dimensions in 2d?
   #+begin_notes
   - using different colors for the additional dimension
   - using different sizes
   - using different shapes
   - using text annotations 
   #+end_notes

10) What is a boxplot?
    #+begin_notes
      - Shows Tukey's 5-point summary
      - Shows ~summary~ without the ~mean~
      - Shows different measures (centrality, spread, IQR)
    #+end_notes
    #+attr_html: :width 400px
    [[../img/boxtest.png]]

    #+begin_src R
      summary(mtcars$mpg)
    #+end_src

    #+RESULTS:
    :    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
    :   10.40   15.43   19.20   20.09   22.80   33.90

11) List some ways to customize a scatterplot!
    #+begin_src R :results graphics file :file test.png
      plot(mtcars$mpg ~ mtcars$wt,
           main = "Performance cars in 'mtcars'",
           xlab = "Weight of car [tons]",
           ylab = "Mileage (miles per gallon)",
           pch = 19,
           type ="p")
      legend("topright",
       legend=c("nothing","to show"))
      abline(lm(mtcars$mpg ~ mtcars$wt), col="red")
    #+end_src

12) What should you reference in your papers, projects, presentations?
    #+begin_notes
    - authors, title, date, place of publication
    - software, any media not made by you
    #+end_notes

13) Which Emacs Org-mode header argument generates a file ~test.png~ in
    the directory on top of your current working directory?
    #+begin_notes
    #+begin_src R :results output graphics file :file "../test.png"
    #+end_notes

14) How can you plot the numeric variable ~Gas~ against the categories
    of ~Insul~ in the ~MASS::whiteside~ dataset?
    #+begin_src R :results graphics file :file test.png
      library(MASS)
      data(whiteside)
      boxplot(Gas ~ Insul, data = whiteside)
    #+end_src
    
* Week 16: Final sprint reviews (Nov 28,30, Dec 2)
#+attr_html: :width 550px
[[../img/leonardo.jpg]]
[[https://en.wikipedia.org/wiki/The_Last_Supper_(Leonardo)][Image: Leonardo da Vinci, Last Supper (1495), Milano]][fn:3]

- *Present* final project prototype in no particular order!
- *Submit* all material prior to the presentation!
- *Read* *[[https://github.com/birkenkrahe/org/blob/master/FAQ.org#how-should-we-prepare-for-the-final-presentation][the FAQ]]* with the checklist carefully *now*!

- There are currently 10 projects and we only have 3 sessions with 50
  minutes each = 150 minutes. Teams get 25', individuals get 15'. We
  have 4 teams (ca. 100') and 6 individuals (ca. 90').

- Since we only have MWF available, are you OK if we go over and
  extend the sessions to 65 min? (Giving us 3 x 65 = 195 min).

* References
#+attr_html: :width 500px
[[../img/books.jpg]]

- Holmquist A (July 16, 2021). Beauty and the Brutalist: The
  Architectural Effect on Our Souls. [[https://intellectualtakeout.org/2021/07/beauty-and-the-brutalist-the-architectural-effect-on-our-souls/https://intellectualtakeout.org/2021/07/beauty-and-the-brutalist-the-architectural-effect-on-our-souls/][URL: intellectualtakeout.org]]

- Kahn J (June 21, 2022). Deep learning pioneer Andrew Ng says
  companies should get ‘data-centric’ to achieve
  A.I. success. [[https://fortune.com/2022/06/21/andrew-ng-data-centric-ai/][URL: fortune.com]].

- Microsoft (12/07/2021). Dashboards for business users of the Power
  BI service. [[https://docs.microsoft.com/en-us/power-bi/consumer/end-user-dashboards][URL: docs.microsoft.com]].

* Footnotes

[fn:3]Can you figure out the connection between the three paintings
selected for this term's final presentation announcement?

[fn:2]The heatmap correlates different marketing variables from a
customer survey, indicating which characteristics are correlated to
one another. From the map, "holding price increase to a minimum" is
strongly (> 0.7) correlated with "setting competitive prices" - this
means that customers who appreciated stable prices also appreciated if
these prices were competitive (i.e. low by comparison). A correlation
of 1 means perfect correlation - you only need one variable! This is
another use for such heatmaps: eliminate superfluous variables.

[fn:1]GNI: composite characteristic, vulnerable to reporting and
complexity issues, also time-dependent; average lifespan: averages are
skewed by outliers - e.g. death of young children, time-dependent
(natural disasters, war, epidemic etc.), policy-dependent (death
wardens for female babies, 1-child policy); schooling: levels are not
necessarily comparable - e.g. Berlin vs. Bavaria), also what exactly
is studied and learnt varies widely; what about home-schooling? The
parallel coordinates plot in the same lesson shows the variance of
different values across continents, and you see e.g. how widely all
values except GNI vary (this would suggest that it's not a very robust
variable).
#+attr_html: :width 600px
[[../img/parallel.png]]
